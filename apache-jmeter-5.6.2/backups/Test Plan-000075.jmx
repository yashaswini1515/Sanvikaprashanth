<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/nq/nr/html/status_NsIMApfRFdB9nTk9uhk8xFAt08_hm8m9QjmR2g0Vl9Y_v1.html-1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">s.yimg.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/nq/nr/html/status_NsIMApfRFdB9nTk9uhk8xFAt08_hm8m9QjmR2g0Vl9Y_v1.html</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C_Petname</stringProp>
              <stringProp name="RegexExtractor.regex">categoryId=(.*?)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_Petname_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/safebrowsing/clientreport/realtime-4" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
@https://petstore.octoperf.com/actions/Account.action?signonForm=&#x10;&#x1;&#x1a;a&#x8;&#x3;&#x10;&#x1;(&#x2;0&#x0;8&#x0;@&#x1;J&#x1d;Chrome/121.0.6167.160/WindowsP&#x5;X&#x1;`&#x1;r+&#x8;&#x1;&#x10;ݙ���1&#x1a; S�x��#vG&#xd;&#x15;\.�����!ZX��E�N&#x11;d&#x1c;2{�&#x3;�&#x1;&#x1;0&#x3;8&#x7;B�&#x1;&#xd;
@https://petstore.octoperf.com/actions/Account.action?signonForm=&#x10;&#x1;&#x1a;&#x3;::1&quot;4https://petstore.octoperf.com/actions/Catalog.action0&#x1;9&#x0; �&#x8;��xBP&#x3;X&#x0;p&#x0;H&#x1;P&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">safebrowsing.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/safebrowsing/clientreport/realtime</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AfB_byAiw2O8ChzUL5RtbFYU8XhGgdnY1yY1NeUp7mqyztuCqlrccKwWsvYl3qKLHbcByA8x-y5eBVNcfdeAsfq-uWTkWjI3TXHjd-mcX7OBF_5HQuAJF6A80xWPHvHxguHm-zDK-29QtMag04syH0elnf89tRDWXm8d2P_35g1tFGE59_Yn9k6MHmS5VZ-NIBUzph70XuJXdav_t4TPYW07j-y8C0SbfsRKeifzAjdeNygSxcHQVFyhUNESsFeSpsTIAGFwyjkaCgYKARYSARMSFQHGX2MiI__EeoxUsQWhHd2Lvx8Yog0274</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="signonForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signonForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C_fp</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;(.*?)&quot; /&gt;&lt;/div&gt;&lt;/form&gt; Need a user name</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_fp_Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.refname">C_sourcePage</stringProp>
              <stringProp name="RegexExtractor.regex">input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;(.*?)&quot; /&gt;&lt;input type=</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_sourcePage_Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C_Petname</stringProp>
              <stringProp name="RegexExtractor.regex">categoryId=(.*?)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_Petname_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1968418097">Please enter your username and password.</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_/PagespeedUi/gen204/-5" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tmambps" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tmambps</stringProp>
                  <stringProp name="Argument.value">0.3102855051683577</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rtembps" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rtembps</stringProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rttms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rttms</stringProp>
                  <stringProp name="Argument.value">40.480571692999995</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ct</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">pagespeed.web.dev</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/_/PagespeedUi/gen204/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://pagespeed.web.dev/</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;121.0.6167.160&quot;, &quot;Chromium&quot;;v=&quot;121.0.6167.160&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;10.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version</stringProp>
                  <stringProp name="Header.value">&quot;121.0.6167.160&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/nq/nr/html/status_NsIMApfRFdB9nTk9uhk8xFAt08_hm8m9QjmR2g0Vl9Y_v1.html-6" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">s.yimg.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/nq/nr/html/status_NsIMApfRFdB9nTk9uhk8xFAt08_hm8m9QjmR2g0Vl9Y_v1.html</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ws/v3/batch?name=mailbox.sync&amp;hash=4cf5d224&amp;appId=YMailNorrin&amp;ymreqid=38b70a3d-fd49-8aa6-1c7d-7c0010013200&amp;wssid=V2*k8urW7lKrAK&amp;retryCount=1-7" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="batchJson" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">batchJson</stringProp>
                  <stringProp name="Argument.value">{&quot;requests&quot;:{&quot;id&quot;:&quot;GetFolders&quot;,&quot;uri&quot;:&quot;/ws/v3/mailboxes/@.id==VjN-lly8XtTR1fIzkbE1YDp7upX1xeD_Xz8hifPQ787pqWL83QPEUFyn86RkSBBUpA0E4QS589m2ULn4HOf3kMCF_g/folders&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;payloadType&quot;:&quot;embedded&quot;},&quot;responseType&quot;:&quot;json&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">in.mail.yahoo.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/ws/v3/batch?name=mailbox.sync&amp;hash=4cf5d224&amp;appId=YMailNorrin&amp;ymreqid=38b70a3d-fd49-8aa6-1c7d-7c0010013200&amp;wssid=V2*k8urW7lKrAK&amp;retryCount=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/safebrowsing/clientreport/realtime-9" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
4https://petstore.octoperf.com/actions/Account.action&#x10;&#x1;&#x1a;a&#x8;&#x3;&#x10;&#x1;(&#x2;0&#x0;8&#x0;@&#x1;J&#x1d;Chrome/121.0.6167.160/WindowsP&#x5;X&#x1;`&#x1;r+&#x8;&#x1;&#x10;�����1&#x1a; �&#x1c;&#x13;&#xf;��9&#xb;��&#x7;�l&#x12;���&#x10;_�����%�&#x1e;��ڒk�&#x1;&#x1;0&#x3;8&#x7;B�&#x1;&#xd;
4https://petstore.octoperf.com/actions/Account.action&#x10;&#x1;&#x1a;&#x3;::1&quot;@https://petstore.octoperf.com/actions/Account.action?signonForm=0&#x1;9&#x0;p�&#x11;��xBP&#x3;X&#x0;p&#x0;B�&#x1;&#xd;
@https://petstore.octoperf.com/actions/Account.action?signonForm=&#x10;&#x2;&#x1a;&#x3;::1&quot;4https://petstore.octoperf.com/actions/Catalog.action0&#x0;9&#x0;p�&#x8;��xBP&#x3;X&#x0;p&#x0;H&#x1;P&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">safebrowsing.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/safebrowsing/clientreport/realtime</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AfB_byAiw2O8ChzUL5RtbFYU8XhGgdnY1yY1NeUp7mqyztuCqlrccKwWsvYl3qKLHbcByA8x-y5eBVNcfdeAsfq-uWTkWjI3TXHjd-mcX7OBF_5HQuAJF6A80xWPHvHxguHm-zDK-29QtMag04syH0elnf89tRDWXm8d2P_35g1tFGE59_Yn9k6MHmS5VZ-NIBUzph70XuJXdav_t4TPYW07j-y8C0SbfsRKeifzAjdeNygSxcHQVFyhUNESsFeSpsTIAGFwyjkaCgYKARYSARMSFQHGX2MiI__EeoxUsQWhHd2Lvx8Yog0274</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">Bingi1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">Bingi@5155</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="signon" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signon</stringProp>
                  <stringProp name="Argument.value">Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">${C_sourcePage}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">${C_fp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Account.action?signonForm=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-10" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Account.action?signonForm=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1397214398">Welcome</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/leaks:lookupSingle-11" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
&#x4;�:�&#x0;&#x10;&#x1a;&#x1a;!&#x2;@����lJ�҃&#x7;=�C&#x17;,/��X:nNEԙ�vk�� &#x5;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">passwordsleakcheck-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1/leaks:lookupSingle</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AfB_byBWk76dgkv2yyDNNiH8BVFB2S-hRXXBoTFh1HjtsQFyySCjNHaQJzEQkgwFTgEaLmD9zOtqHMdTBwdqEF7N_kbn-BiMWP0SmNICL_WO_4Qv9-jhUXhkl0dYgESHZ7Y8FSrHtmaEy6MY5sstni6iep3rcY-yIKpXu6_JH0Ucbg7r_YB3PpOrnGwwazBJ9pFbYyjDPcH5dvxJtWJAEXwhDg5VUwVXK3GeC807O-LuBg6VQueVd2GDU_ilJWFMCme1OTK2LmcaCgYKAfESARMSFQHGX2MiDzzKkmiD_9M2R5oqdoubUw0274</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-12" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:66458,&quot;request_elapsed_ms&quot;:745,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://www.google.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Fish" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/RST2.srf-13" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;s:Envelope xmlns:s=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ps=&quot;http://schemas.microsoft.com/Passport/SoapServices/PPCRL&quot; xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:saml=&quot;urn:oasis:names:tc:SAML:1.0:assertion&quot; xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot; xmlns:wssc=&quot;http://schemas.xmlsoap.org/ws/2005/02/sc&quot; xmlns:wst=&quot;http://schemas.xmlsoap.org/ws/2005/02/trust&quot;&gt;&lt;s:Header&gt;&lt;wsa:Action s:mustUnderstand=&quot;1&quot;&gt;http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue&lt;/wsa:Action&gt;&lt;wsa:To s:mustUnderstand=&quot;1&quot;&gt;https://login.live.com:443/RST2.srf&lt;/wsa:To&gt;&lt;wsa:MessageID&gt;1707419437&lt;/wsa:MessageID&gt;&lt;ps:AuthInfo xmlns:ps=&quot;http://schemas.microsoft.com/Passport/SoapServices/PPCRL&quot; Id=&quot;PPAuthInfo&quot;&gt;&lt;ps:HostingApp&gt;00000000480728C5&lt;/ps:HostingApp&gt;&lt;ps:BinaryVersion&gt;24&lt;/ps:BinaryVersion&gt;&lt;ps:UIVersion&gt;1&lt;/ps:UIVersion&gt;&lt;ps:InlineUX&gt;Silent&lt;/ps:InlineUX&gt;&lt;ps:IsConnected&gt;1&lt;/ps:IsConnected&gt;&lt;ps:IsAdmin&gt;1&lt;/ps:IsAdmin&gt;&lt;ps:Cookies&gt;&lt;/ps:Cookies&gt;&lt;ps:RequestParams&gt;AQAAAAIAAABsYwQAAAAxMDMz&lt;/ps:RequestParams&gt;&lt;ps:WindowsClientString&gt;Cr6VFicvP36RBXhPlZms30tI2u6YsEZj+YHl0GASmF4=&lt;/ps:WindowsClientString&gt;&lt;ps:ClientCapabilities&gt;1&lt;/ps:ClientCapabilities&gt;&lt;/ps:AuthInfo&gt;&lt;wsse:Security&gt;&lt;EncryptedData xmlns=&quot;http://www.w3.org/2001/04/xmlenc#&quot; Id=&quot;BinaryDAToken1&quot; Type=&quot;http://www.w3.org/2001/04/xmlenc#Element&quot;&gt;&lt;EncryptionMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#tripledes-cbc&quot;&gt;&lt;/EncryptionMethod&gt;&lt;ds:KeyInfo xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;&lt;ds:KeyName&gt;http://Passport.NET/STS&lt;/ds:KeyName&gt;&lt;/ds:KeyInfo&gt;&lt;CipherData&gt;&lt;CipherValue&gt;M.C107_BAY.CjQRbQsenfBPi4eVQKeJUTJBFLMNufw4IERr7LmXPfAGRsPDS4lmvc2qVhKKv5W0jWlQ7syGVYB7zIOslmZ1OMptEnwFpL9hOWcN34OeNGTyxFulqfGG2XMnlUgJ3b9U0pR942tnusUDcmy7naToYI8+FVPc0VYd1ly24hr1+BuzcJmd+8uX+hIrtUY6aXlX85mwetm3nHzeqVVeB4yq4UIzWhlk4za4RMA235T8kx8zZTl6y+miQfN2d+up75W2tfF3xArNuyL7WazSwZRvyP6TqWGK6jURS+fIDILudy6sLW2Vcw66raD2TAYwTryJu1x24bJmBwaMXL8WFer9mlwaXNK9FKHWfVUjNCHgDELrD4JJy1PiXqdQoAYb5+8gcoox9jAsSskZj36n8gPyz9wDEGwsKsTMGWbuHSTRl5LPf7b1mdDkXYWxPeYNVQT9aB5JYKHfn2Uw/iAlkMm4OkkReELZ6kTv15Ir59+iglZf1iLF3uBLCWbMAOf4J5LF771T2qVeUCHPwpv3sfv4DTA=&lt;/CipherValue&gt;&lt;/CipherData&gt;&lt;/EncryptedData&gt;&lt;wsse:BinarySecurityToken ValueType=&quot;urn:liveid:device&quot; id=&quot;DeviceDAToken&quot;&gt;&amp;lt;EncryptedData xmlns=&amp;quot;http://www.w3.org/2001/04/xmlenc#&amp;quot; Id=&amp;quot;devicesoftware&amp;quot; Type=&amp;quot;http://www.w3.org/2001/04/xmlenc#Element&amp;quot;&amp;gt;&amp;lt;EncryptionMethod Algorithm=&amp;quot;http://www.w3.org/2001/04/xmlenc#tripledes-cbc&amp;quot;&amp;gt;&amp;lt;/EncryptionMethod&amp;gt;&amp;lt;ds:KeyInfo xmlns:ds=&amp;quot;http://www.w3.org/2000/09/xmldsig#&amp;quot;&amp;gt;&amp;lt;ds:KeyName&amp;gt;http://Passport.NET/STS&amp;lt;/ds:KeyName&amp;gt;&amp;lt;/ds:KeyInfo&amp;gt;&amp;lt;CipherData&amp;gt;&amp;lt;CipherValue&amp;gt;M.C107_BAY.CixC2tGEL+JSdmLs2IstGI2SYUgxhc4nD6+7jwDd/U8KAUcgOetoGSoxFSzw7RQ5WsHleDlNemVv7R66+5o8dDNIrgvQVAAFbwLTASahith0MfXW4Mxrt427n4nJDUP4erVhlOWmMjx2bl8dsTq0DCvM0ZwdZuMLpqhNTGf6gASjjh/DL4o9Mge9Hl5ltS5Wynp3yWOGc3HhXY6NRpFRsOIpXjm17d/u88N/j0Gna9qvN8aed5GuIneiQ/2J+hX7GeB2vuFq7jq6ozf8+WGeTah4eGZbVnkHz9IA59v9HHJE52zoF5Xv7PIkGaOwB3Rbci2VdTauNuMMnuO8gL2hwj+EP8ACmjAvDWXcBAAue+i1iB/FaFl1ajrH0FnIuP6GdqwuN0KaQAKwL0D228q/bJpj1U2CFzQ9OxGFQhARxA9jZVzSBIWar6lMkD2a6QnNyZLzeggG9JG4X6/Ii9bGaz7YJDD0X2nyUrOfrBYGj79ktBQflAKH8rt1q37AI+CTkWY1d5zBIWVjgQgJzOfPvr4=&amp;lt;/CipherValue&amp;gt;&amp;lt;/CipherData&amp;gt;&amp;lt;/EncryptedData&amp;gt;&lt;/wsse:BinarySecurityToken&gt;&lt;wsse:UsernameToken wsu:Id=&quot;user&quot;&gt;&lt;wsse:UsernameHint&gt;bingiprashanth12@gmail.com&lt;/wsse:UsernameHint&gt;&lt;wsse:LoginOption&gt;1&lt;/wsse:LoginOption&gt;&lt;/wsse:UsernameToken&gt;&lt;wssc:DerivedKeyToken wsu:Id=&quot;SignKey&quot; Algorithm=&quot;urn:liveid:SP800-108CTR-HMAC-SHA256&quot;&gt;&lt;wsse:RequestedTokenReference&gt;&lt;wsse:KeyIdentifier ValueType=&quot;http://docs.oasis-open.org/wss/2004/XX/oasis-2004XX-wss-saml-token-profile-1.0#SAMLAssertionID&quot;/&gt;&lt;wsse:Reference URI=&quot;#DeviceDAToken&quot;/&gt;&lt;/wsse:RequestedTokenReference&gt;&lt;wssc:Nonce&gt;pT4HrHIkAXSAMNA8kDkMgM9qvgQN8b15&lt;/wssc:Nonce&gt;&lt;/wssc:DerivedKeyToken&gt;&lt;wsu:Timestamp wsu:Id=&quot;Timestamp&quot;&gt;&lt;wsu:Created&gt;2024-02-08T19:10:36Z&lt;/wsu:Created&gt;&lt;wsu:Expires&gt;2024-02-08T19:15:36Z&lt;/wsu:Expires&gt;&lt;/wsu:Timestamp&gt;&lt;Signature xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;&lt;SignedInfo&gt;&lt;CanonicalizationMethod Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;&lt;/CanonicalizationMethod&gt;&lt;SignatureMethod Algorithm=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt;&lt;/SignatureMethod&gt;&lt;Reference URI=&quot;#RSTS&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;&lt;/Transform&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;&lt;/DigestMethod&gt;&lt;DigestValue&gt;3X2NRi73u65JiYfJbllN4PN3fYr41XxoSCkZBO7IaVE=&lt;/DigestValue&gt;&lt;/Reference&gt;&lt;Reference URI=&quot;#Timestamp&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;&lt;/Transform&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;&lt;/DigestMethod&gt;&lt;DigestValue&gt;s5YqcwAT1Z7v7D22FgtdBvbEd2ItTKwE5qrI1zLFDsg=&lt;/DigestValue&gt;&lt;/Reference&gt;&lt;Reference URI=&quot;#PPAuthInfo&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;&lt;/Transform&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;&lt;/DigestMethod&gt;&lt;DigestValue&gt;nBZxixyLU+IHBbGhnIGNLTHdUazg8C0mCRbK3cQpVLQ=&lt;/DigestValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;XT1ps/tn8YHqhmxBaUwNUhTgnfthbxd2JEBfFyvdlw4=&lt;/SignatureValue&gt;&lt;KeyInfo&gt;&lt;wsse:SecurityTokenReference&gt;&lt;wsse:Reference URI=&quot;#SignKey&quot;/&gt;&lt;/wsse:SecurityTokenReference&gt;&lt;/KeyInfo&gt;&lt;/Signature&gt;&lt;/wsse:Security&gt;&lt;/s:Header&gt;&lt;s:Body&gt;&lt;ps:RequestMultipleSecurityTokens xmlns:ps=&quot;http://schemas.microsoft.com/Passport/SoapServices/PPCRL&quot; Id=&quot;RSTS&quot;&gt;&lt;wst:RequestSecurityToken Id=&quot;RST0&quot;&gt;&lt;wst:RequestType&gt;http://schemas.xmlsoap.org/ws/2005/02/trust/Issue&lt;/wst:RequestType&gt;&lt;wsp:AppliesTo&gt;&lt;wsa:EndpointReference&gt;&lt;wsa:Address&gt;scope=https://consentservice.microsoft.com/checkin/UnifiedUserConsent.Read openid profile&amp;amp;telemetry=MATS&amp;amp;mkt=en-US&amp;amp;api-version=2.0&amp;amp;x-client-src-SKU=MSAL.xplat.Win32&amp;amp;oauth2_batch=1&amp;amp;x-client-SKU=MSAL.xplat.Win32&amp;amp;uaid=0906caef-11cb-40c1-a611-b70f3391a96b&amp;amp;x-client-info=1&amp;amp;x-client-OS=10.0.19041.3636&amp;amp;clientid=00000000480728C5&amp;amp;x-client-Ver=1.1.0%2Bb4bbb1ef&lt;/wsa:Address&gt;&lt;/wsa:EndpointReference&gt;&lt;/wsp:AppliesTo&gt;&lt;wsp:PolicyReference URI=&quot;TOKEN_BROKER&quot;&gt;&lt;/wsp:PolicyReference&gt;&lt;/wst:RequestSecurityToken&gt;&lt;wst:RequestSecurityToken Id=&quot;RST1&quot;&gt;&lt;wst:RequestType&gt;http://schemas.xmlsoap.org/ws/2005/02/trust/Issue&lt;/wst:RequestType&gt;&lt;wsp:AppliesTo&gt;&lt;wsa:EndpointReference&gt;&lt;wsa:Address&gt;http://Passport.NET/tb&lt;/wsa:Address&gt;&lt;/wsa:EndpointReference&gt;&lt;/wsp:AppliesTo&gt;&lt;/wst:RequestSecurityToken&gt;&lt;/ps:RequestMultipleSecurityTokens&gt;&lt;/s:Body&gt;&lt;/s:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/RST2.srf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/soap+xml</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 10.0; Win64; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; Tablet PC 2.0; H9P; HCTE; McAfee; IDCRL 24.10.0.19045.0.0; IDCRL-cfg 16.000.29731.3; App svchost.exe, 10.0.19041.3636, {DF60E2DF-88AD-4526-AE21-83D130EF0F68})</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/consentcheckin/v1.0/consents-14" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">consent.config.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/consentcheckin/v1.0/consents</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiI0Z3JES2dOZEh4am9xcnF2NTBXUTFYQ2xwdWsiLCJ6aXAiOiJERUYifQ.YmiRiNSHaZXnw_WyD1skRtE5FzK7XnvxbgqvnkxYT9q9CiLOOXK3R00ualTBqNbTwnXSMCI2mTBeUW9Rb3rg7T9qHoX2eMOn5Xr0_JLmXHtzI4aZDSMp6HvnOLqTBMHOOEOaYMzV5ZHcOmKZtSvr5s1pC4Xfy9whf4r6r8EjV22EDcpAk0L7SXoeiJH07SA1fPo6eXpjMH4y2nUFCAfig-YERTOFIt7oc8_FmeXKX4Gww2ggFMrLVD1kbxw8ZSaBmI_StJxNWPSV5Fw6af-2m3irr21WafmkvEpd5PShOhSMk0C9-aX_A4z_LyDHFctvZDoYixJJf5gGkTpIV2C2FA.QqSjIK4KnIijEY7U_-v4Gg.2tftsbMdpEZu33k5qxyklXATueaVkIUNrGxjTHMdGdsQtqk4HcomFJ7w8QOfgHrBYV5xbypu3vexAQhXtjZWr-mE_xGUjF8ux2oZqg7VE9H7RxZDs-Y1BCfTWWVGlk7YtjONcTXjgt_0tN-36_cTuKRVB5BKKHsz55FJ0OrDi-Iovgb56O3OUSeqaLMrObrzvlj8jKyNeTa8X6jGHJFqfrSRvEnzUvZ2zusWMZLUL-9M1K8V2xhsD3La8IItMrKE5d1gKCJa7MigBVz9bgKd7-ctQfpQk-Zm0fRdyxMuMbxMzGpONyNiz7Jhz4qM242kCIXryxaCqpgUWWaMrsn6KWuoc6-cJKb9MsvxES4326vfVMVvvFFDRSCvXFSsDDAzsJddnY75XXZ7Y-iRZ12tAWQ1fzJnxZtppY2oz-IGB82Zd9Aw66aZx-5r5WnhIJeOpdShMc2zWvt2lcubVfl90r8g5ejTkcQf6VuUpHJWRrDkz15TtFhj5MXaNSil1FRcTn2HJ56o3LtiBf1UElViOhiP0Oyfo9-volPvJ_1CxNCURWHEUL-314hxwzNO16FLw5IatGlSPEheY0VtFdBGEUzFygp-Gdqj9BuhwYa_xmF6s5Mj_VHVP7eRTfBtnZ1qER5iyY1w_vU9UzA1bq0xHv_g5nWZyEJMm7XGtGt2LPfEly40bsoiAUmkcH5OS-ejGlCncmOivD67KSszlF7Ydi-Wu_T441Z66kAv1SqpcB0OcWNzAv-GqcLLcRspLDesjVYn40rEW7NFQW5hg4gFUCTC4zNDKxvLGXN6_mSSC2nNHnIrLccBWtTX-kfdxzab2pYa3pWmE1T3LN5Xg3CD_mGPcnEuwy7SoRIULyKyIjIJlA_Z7vC797H2_eCGedGcscF4I7LZoIU-MqivWCHxbp3Qio7JyaNs5hNFXbX-ylmbZMdMrBFFIreOJTd3j_6hGc2jXRgPvZkkgdZf_1QiJs-UkiWPDXz7Vs5vgq3m5iyzvmbhzKaZu4NqndDeemUu5bHvbScH-264CsTB8XipnZFIJAVDUe-Ys6cG7kLPiwRRJjYtMv-D0fNjKnwi1060sj-bsnC5VgPCS5iRh7z_XR4GToiwebqdBq9fG9a2YMpn73rD-T0X01F7NhpZWDlKT5LXyfiW6BEdas4lV2EivxAOLB_-It2ueJf1iTjJWYt6GcRKKyHaCTyAutqjaDojyDUzKGvKt8wnQJFMwTEiY9gOmrTTe89MD74Fa1a2cHogYMAFPIJs3lOLjTWX7Q3-9tA9JfazP6xni3CiDsjbGJUIyyhXG65mRvWO_pXoX63I2kh6Nzmxi6NyIjAupcAvwfO83ZeaUhUNxL1qwLFNsoF2qSrWgIPJ5oNwxEOuTMNzkRP3o6z_onlA_Fh7S76F.3e9pkAFPNRCy3TKwlIFbRA</stringProp>
                </elementProp>
                <elementProp name="FormFactor" elementType="Header">
                  <stringProp name="Header.name">FormFactor</stringProp>
                  <stringProp name="Header.value">Unknown</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US</stringProp>
                </elementProp>
                <elementProp name="X-Cid" elementType="Header">
                  <stringProp name="Header.name">X-Cid</stringProp>
                  <stringProp name="Header.value">C145166B-6175-4314-9AB7-D8AE395FB2D1</stringProp>
                </elementProp>
                <elementProp name="ConsentSurface" elementType="Header">
                  <stringProp name="Header.name">ConsentSurface</stringProp>
                  <stringProp name="Header.value">OfficeAppStart</stringProp>
                </elementProp>
                <elementProp name="Platform" elementType="Header">
                  <stringProp name="Header.name">Platform</stringProp>
                  <stringProp name="Header.value">Windows</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft Office OneNote/16.0.17231.20194 (Windows/10.0; Desktop WOW64; en-IN; Desktop app; HP/HP Pavilion x360 Convertible 14-)</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-15" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="viewCategory" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viewCategory</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="categoryId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">categoryId</stringProp>
                  <stringProp name="Argument.value">${C_Petname}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.refname">C_ProductID</stringProp>
              <stringProp name="RegexExtractor.regex">productId=(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_ProductID_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-548555252">Product ID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-16" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:92882,&quot;request_elapsed_ms&quot;:30044,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://securepubads.g.doubleclick.net/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chrome-sync/command/?client=Google+Chrome&amp;client_id=ffJGd6P%2BI8qEhc6FWKviNw%3D%3D-17" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;͗}l&#x13;�&#x1d;��&#x1c;J/^�e��	�$&apos;��Y8��|&gt;�y&#x18;�W��&#x1d;�$v�FM��9���&#x1c;ۉ�@&#x18;t�/0i��RYA��ҭ{Ѣ�ed����K�(E&#x15;�+k�&#xd;M��F�m�^�4�ŤdIT�T��qz��=~������=&gt;�&#x1a;.)&apos;��&lt;[�X�(�DO&quot;�&amp;3:^�6�p�̷�O}M-��V�h�&#x1a;�8�\!�X�D&lt;!&#x19;&#xd;
&#xe;G9�*E���f&apos;&quot;4�7x&#x2;�T�^I&#x15;*���i$&quot;&amp;O��!&#x13;�����Ai&lt;&#x1a;c*V�J*�Nʐ++�AGҶ�W&#xe;Y,��&gt;�п�&#xf;�j��8��ۗq�/_�p&#x19;7&#x7f;=&#x18;�F��@�;b&#xd;D=��a�%��ƙ&#x13;��kT���w�@&#x5;�=��S�)W�7�&#xc;�,�5�iD�;�g&#xd;
n�Ź=Sp+�Y��&#x8;�&lt;&#x5;��R��+���&#x1c;(&#x16;�J&#x1e;�&#x14;���@^�&#x6;�g�bR�&#xb;z;[d3JB���&#x1a;�&#x17;[e�yeL.�\�I&#x6;��3.%��t��&#xd;�b��\�&#x0;Y&#x5;���D��ڛ�\��&#x7;�&#x1;h&#x4;*&#x1f;����&#x7;��w�!�&#xc;|&#x6;^}&#x1;��?�[z��{!��&#x15;���eE�&#x7f;z���m�SW&gt;���]&#x1f;&#x1f;�M���wy&#x1e;�q�&#xb;��F���G?��{�צ���]�\h&#x1;{�ms&#x1f;������?;}�+���m�O&#xe;&gt;4���鋯&#x1c;�&#xd;
��C����]szO&#x1c;��[��}&#x15;n	/G��$(��&quot;H(�����͑G��&lt;&#x11;��9~����3&#xf;�Ep���&#x1f;�&#x1e;�&#x4;k&#x1a;g��h &#x5;r��&#x1f;���J�A�^�&#x6;�	q&#x2;`	���&#x6;u�Ha4�&#x1b;&#x1;��	%M&#x2;�r&amp;QDYA���gD̄k �&#x7f;j�aWk����uLt9�՚�&gt;��w/5�@��a�,ޖ}ȑ�e��&lt;+5P�&#x1a;��&#x19;j�4�&#x16;�&gt;߄A��?���&#x3;�k-?Xk�&#x3;uM#�:r��g��w�TO��&#x19;xB&#x5;�&#x1d;0�&#xf;��T}&#x1a;�&#xe;�Џa��Q��04&#x3;߇Kc�X8ZΏ�)},�&#x17;&#x1d;�L�gc2&#x0;��gU�N&#xc;&#x3;&#xc;&amp;&#xd;
,�	����&#x15;Q&#x1a;0$�r��` &#x18;\0�&#x1a;H;[�O�d��|&#x19;���U~�`�ެ��wx%�!5~�&#x16;�B&#x18;D�������]����&#x3;���T�A;`h&#x1;牲&#x14;���,��&#x7;i�&#x8;z�q���R�E}�A݉�&#x18;�p��&#xd;
&#x2;mDIB0�,a&#x4;�h$&#x1;o�0�����V2�?j&#x0;̃w����S��x��v��z~.A!�&lt;ߴ&#x2;��BD�[&#x15;u�ZQϼ?��yH��&#x16;E��&#x7;/+C&#x16; ���&#x19;�&#x1f;LPҨX&#x0;��7$�&#x83;iʉ�-�&#x1a;ԝ,m$L&#x14;`Q��	��H&#x2;e&#x1;A�&#x18;͐&#x1c;&#xb;8A�$����/e�&#x15;��+ZCK�&#x1b;5�����W!�f�&#x4;�$�Bӗr�-M�H�64&#xf;u]�&#x1c;�z;�W�ʡNaB&lt;��c�&#x18;C�&#x11;�oLJ&#x7;�	Ϊ�*����xB�&lt;�S��:�B���B��k&#x3;��,���5&#x15;2;�B&#xe;&#x1f;�&#xb;9�H&#x3;��?U�G?Y�&lt;{�.��S��ώ��&#x1f;M7&quot;&#x1f;�hD��ӆ&#x1c;��M�/��ȍ�;�c&#x17;;��{�!�O�G�^3#��nB�|ɂ��&quot;�����ڰ��4&#xc;�T�&#x1a;���C��&#x1a;�28�n��2���*�AƟ1&#x19;�A&#x8;&#x5;���&#x18;�2&#x6;xR	&#x13;�R�(�&#x2;tx��2��Pvxt�lOň�0�_*�&#x11;,��gR6�h8#&#x1b;&#x1;�ό&#x5;��&#x8;�(0!o&#x14;/�������L�m&#x1f;��s&#x13;�&#x6;��5�&#x11;{9�IX&#x15;&#x17;��=0�C&#x15;�H�L����M�b��&#x1;�����7w=�&#x1b;h�����v�&#x1f;�g���O���&#x1e;݆�n����+����2���қ��m)Kx�4T&#xc;z��3&#x1d;��r�&#xd;!��&#x1c;`mi�.�1%b�)Z���~�&#x19;]ۮ�O��w����n��v�k��}�&#x10;&#xf;mwE���&#x1;](`���G�r�]�&#x3;��aM\���&#x1b;C�[�)�2�qȣ&#xf;�7���~ńN8&amp;e+INҮ��H��ɼmb����&#x1e;�&#x3;)�1Btt��w�	f��dn��ۖ�O&amp;b|,m�&#x7f;&#x2;�^8)�&amp;�$Q�6�hu�v�_��a�=-M4�&#x3;�W!P3&lt;Ҥ^պ��Y����#&#xd;��s�/���g&#x16;&#x1b;����/[(�&#x13;V&#x7f;�e�.�,��&lt;&#x1;&#xd;N�:LG�I�S�FK&#x3;��R&#x6;�(&#x0;V0�4a�&#x0;o&#x4;&quot;I�$&#xb;8#��&lt; p&#x16;�&#x3;�����K�&#x4;X����H�ֵ��&quot;&apos;�ix��e��&#x16;�,�&#x1;��&apos;&amp;�9mB&#x4;�.�g��Tl��$���T��9�&apos;�&#x1;&#x15;g?���l&#x3;�1[��R5��&#x3;$j&#x0;�z&#x10;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">clients4.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/chrome-sync/command/?client=Google+Chrome&amp;client_id=ffJGd6P%2BI8qEhc6FWKviNw%3D%3D</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AfB_byBDcRECoplYHnAv29dSeioLRIkmhnSqWpZFBcZccQSmZfRomLwpZdNjbpo0e5fhUZ-x5_mUzsjFzXKuReu4n4kcUtMETo_qUmz0jtZXFxNITrK_OIvANNZNI9WDLI2OkPx1QXwOrxac8xefmlHv1rRnL5kOhMLsKgg9ja_D-UrE1PoUOsKmVDtHjlP1o_n1np-cy47azJ9lI_Bwu93SryPV9SwxlrVl9VWq1nkNJr_0tR52254kdBlbIWv9usQJqt0bYnK7fb0aCgYKAdUSARMSFQHGX2MiuYEIWBiIM8qakllPxACatg0278</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Chrome WIN 121.0.6167.160 (8e23a63b5dead78825bec5ef48f4aeb5698ce21a-refs/branch-heads/6167@{#1764}) channel(stable)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-18" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;T&#xd;
Rhttps://petstore.octoperf.com/actions/Catalog.action?viewCategory=&amp;categoryId=${C_Petname}(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/service/update2/json?cup2key=13:8d6mxskhLULsBbuTX1bSHTRayToO1M-gxsMGkjOpmKU&amp;cup2hreq=6af408d9af3528f6010a3c6583c555e5e1ba0fedc4e0e5e8f5ecbc076b0a19e1-25" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:{&quot;@os&quot;:&quot;win&quot;,&quot;@updater&quot;:&quot;chrome&quot;,&quot;acceptformat&quot;:&quot;crx3,puff&quot;,&quot;app&quot;:[{&quot;appid&quot;:&quot;ihnlcenocehgdaegdmhbidjhnhdchfmm&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1::&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.aeedb246d19256a956fedaa89fb62423ae5bd8855a2a1f3189161cf045645a19&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{74ca9ff5-e9fc-43c9-99e7-4872f5853778}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;1.3.36.141&quot;},{&quot;appid&quot;:&quot;neifaoindggfcjicffkgpmnlppeffabd&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:1299:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.c900ba9a2d8318263fd43782ee6fd5fb50bad78bf0eb2c972b5922c458af45ed&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{4c50c919-edf5-47e8-89e3-863e5ef20d95}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;1.0.2738.0&quot;},{&quot;appid&quot;:&quot;gcmjkmgdlgnkkcocmoeiminaijmmjnii&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:bm1:&quot;,&quot;cohortname&quot;:&quot;Stable&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.cd1978742a4afdbaaa15bf712d5c90bef4144caa99024df98f6a9ad58043ae85&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{8aa6b27e-02e1-495e-81f9-693bd36611c6}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;9.49.1&quot;},{&quot;appid&quot;:&quot;oimompecagnajdejgnnjijobebaeigek&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:1zdx:&quot;,&quot;cohortname&quot;:&quot;Chrome 106+&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{d086e725-b379-4adf-9842-6e5896c7197c}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;4.10.2710.0&quot;},{&quot;appid&quot;:&quot;kiabhabjdbkjdpjbpigfodbdjmbglcoo&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:v3l:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:6067,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.4a6508925b2ffec931c1e3931ddeb15ca41d820a8264cd5a962b526e9932bcdf&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{ec6778c6-3cb3-497f-a2a7-0cc1f8199b55}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;2024.1.2.1&quot;},{&quot;appid&quot;:&quot;giekcmmlnklenlaomppkphknjmnnpneh&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:j5l:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.fd515ec0dc30d25a09641b8b83729234bc50f4511e35ce17d24fd996252eaace&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{36323613-96e9-423c-89e2-7b99063b6d40}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;7&quot;},{&quot;accept_locale&quot;:&quot;ENUS500000&quot;,&quot;appid&quot;:&quot;obedbbhbpmojnkanicioggnmelmoomoc&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:s6f:20ol@0.5&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.50a410468d64fd55a0fc41dd22d574883f13386eb147b0b5b96ee66c118d4d6e&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{3e1e3e87-7a88-4e61-b1ff-7c08568790a7}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;20230916.567854667.14&quot;},{&quot;appid&quot;:&quot;khaoiebndkojlmppeemjhbpbandiljpe&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:cux:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.f4f1eb04881095d1cc8f2e1799a8144c10476dc1088a03ecdb4418644040a554&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{ab2a942d-9081-483f-af8d-ea1cf0bf993c}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;63&quot;},{&quot;appid&quot;:&quot;lmelglejhemejginpboagddgdfbepgmp&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:lwl:27p3@0.5&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{b9035da7-0a22-4b49-a7e1-8ad27b75182e}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;432&quot;},{&quot;appid&quot;:&quot;laoigpblnllgcgjnjnllmfolckpjlhki&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:10zr:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{50231c65-3e4a-4a2f-8ffa-aadf8650ff13}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;1.0.7.1652906823&quot;},{&quot;appid&quot;:&quot;ehgidpndbllacpjalkiimkbadgjfnnmc&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:ofl:&quot;,&quot;cohortname&quot;:&quot;stable64&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.a8a79d350c2a5e3bc36226633a8e0bed0dfab184e77f38fc8f0820ebacf8eafc&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{8690e28b-550c-4501-8dbb-5ca3188e6874}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;2018.8.8.0&quot;},{&quot;appid&quot;:&quot;llkgjffcdpffmhiakmfcdcblohccpfmo&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1::&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.3a118962ef814c91f6476bb9f0de58afa63103af6ac1b8729be9b39a86789e96&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{e0927e42-2f39-4c9e-a9d9-d95e98bb4d9b}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;1.0.0.15&quot;},{&quot;appid&quot;:&quot;niikhdgajlphfehepabhhblakbdgeefj&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:1uh3:&quot;,&quot;cohortname&quot;:&quot;Auto Main Cohort.&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:6137,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.396f0c6d34d7135fea2ed14b699555b8f2dfb667e899ce8c79850d18760e8f06&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{c9050190-02f6-4d1a-b5bc-f659a23b2677}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;2024.2.7.0&quot;},{&quot;appid&quot;:&quot;jamhcnnkihinmdlkakkaopbjbbcngflc&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:wvr:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.c52c62a7c50daf7d3f73ec16977cd4b0ea401710807d5dbe3850941dd1b73a70&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{1ef6d1b6-8064-4042-8f6d-274f729c8b30}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;120.0.6050.0&quot;},{&quot;appid&quot;:&quot;ggkkehgbnfjpeggfpleeakpidbkibbmn&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:ut9/1a0f:23ml@0.1&quot;,&quot;cohortname&quot;:&quot;M108 and Above&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.c45cd56a0a8da0883c8f9757b31891d6c628f38cb80724015ffdf33b419a73f3&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{5cc7d12e-b971-45fd-b5a9-b636d65ddd0a}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;2023.11.27.1202&quot;},{&quot;appid&quot;:&quot;ojhpjlocmbogdgmfpkhlaaeamibhnphh&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:w0x:&quot;,&quot;cohortname&quot;:&quot;All users&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.545666a4efd056351597bb386aea1368105ededc976ed5650d8682daab9f37ff&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{71fc5a3f-b330-4391-a89c-b8385bf65fa9}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;3&quot;},{&quot;appid&quot;:&quot;efniojlnjndmcbiieegkicadnoecjjef&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:18ql:&quot;,&quot;cohortname&quot;:&quot;Auto Stage3&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.e4bdca96fb46d22bc12f5bc5bdb5cdb518555fd1762653f8afc96d06b34ec74b&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{bd17fe12-ed79-4f02-9431-fe37573f44fa}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;852&quot;},{&quot;appid&quot;:&quot;jflookgnkcckhobaglndicnbbgbonegd&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:s7x:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.363351f0d0ca05b48f43d4adac95ad01d955bb2988c015733e70e09625d47065&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{14a8c5c8-eaaf-4724-b78d-bd16f37af0af}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;3018&quot;},{&quot;appid&quot;:&quot;hfnkpimlhhgieaddgfemjhofmfblmnib&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:jcl:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.90f54a8ca8c3135f647fedbb5f38ecadbbae4d45dafc3b73cde0c96d924a1773&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{e909824b-3332-4438-a852-c32660f82e7d}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;8531&quot;},{&quot;appid&quot;:&quot;jflhchccmppkfebkiaminageehmchikm&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:26yf:&quot;,&quot;cohortname&quot;:&quot;Stable&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:6158,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.b7f0ea7d529f6bda390bc5e8cc05551a6abf4b5d40243ece003b5dba5d7b4089&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{01c97619-7852-426a-8e60-66c9bd9d6738}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;2024.2.7.4&quot;},{&quot;appid&quot;:&quot;eeigpngbgcognadeebkilcpcaedhellh&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:w59:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.c64c9c1008f3ba5f6e18b3ca524bc98dcd8acfae0a2720a8f1f3ef0f8d643d05&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{20517f7a-44e5-402d-a91a-e53546400fe0}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;2020.11.2.164946&quot;},{&quot;appid&quot;:&quot;gonpemdgkjcecdgbnaabipppbmgfggbe&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:z1x:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.48fecfa3c6f59eb6c34fdd5e8f19e0678699e2f27dc8ebfa7025c246d4575c68&quot;}]},&quot;ping&quot;:{&quot;ping_freshness&quot;:&quot;{dfcd93c4-384b-4bc9-9947-86480d2b1a02}&quot;,&quot;rd&quot;:6247},&quot;updatecheck&quot;:{},&quot;version&quot;:&quot;2024.1.17.0&quot;}],&quot;arch&quot;:&quot;x64&quot;,&quot;dedup&quot;:&quot;cr&quot;,&quot;domainjoined&quot;:true,&quot;hw&quot;:{&quot;avx&quot;:true,&quot;physmemory&quot;:4,&quot;sse&quot;:true,&quot;sse2&quot;:true,&quot;sse3&quot;:true,&quot;sse41&quot;:true,&quot;sse42&quot;:true,&quot;ssse3&quot;:true},&quot;ismachine&quot;:true,&quot;nacl_arch&quot;:&quot;x86-64&quot;,&quot;os&quot;:{&quot;arch&quot;:&quot;x86_64&quot;,&quot;platform&quot;:&quot;Windows&quot;,&quot;version&quot;:&quot;10.0.19045.3930&quot;},&quot;prodversion&quot;:&quot;121.0.6167.160&quot;,&quot;protocol&quot;:&quot;3.1&quot;,&quot;requestid&quot;:&quot;{699414db-105c-4c19-bf9d-4edcc7e0c8e2}&quot;,&quot;sessionid&quot;:&quot;{7d327a11-dd8d-47ae-8e15-8efe3366860c}&quot;,&quot;updater&quot;:{&quot;autoupdatecheckenabled&quot;:true,&quot;ismachine&quot;:true,&quot;laststarted&quot;:0,&quot;name&quot;:&quot;ChromiumUpdater&quot;,&quot;updatepolicy&quot;:-1,&quot;version&quot;:&quot;123.0.6268.0&quot;},&quot;updaterversion&quot;:&quot;121.0.6167.160&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">update.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/service/update2/json?cup2key=13:8d6mxskhLULsBbuTX1bSHTRayToO1M-gxsMGkjOpmKU&amp;cup2hreq=6af408d9af3528f6010a3c6583c555e5e1ba0fedc4e0e5e8f5ecbc076b0a19e1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Update-AppId" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-AppId</stringProp>
                  <stringProp name="Header.value">ihnlcenocehgdaegdmhbidjhnhdchfmm,neifaoindggfcjicffkgpmnlppeffabd,gcmjkmgdlgnkkcocmoeiminaijmmjnii,oimompecagnajdejgnnjijobebaeigek,kiabhabjdbkjdpjbpigfodbdjmbglcoo,giekcmmlnklenlaomppkphknjmnnpneh,obedbbhbpmojnkanicioggnmelmoomoc,khaoiebndkojlmppeemjhbpbandiljpe,lmelglejhemejginpboagddgdfbepgmp,laoigpblnllgcgjnjnllmfolckpjlhki,ehgidpndbllacpjalkiimkbadgjfnnmc,llkgjffcdpffmhiakmfcdcblohccpfmo,niikhdgajlphfehepabhhblakbdgeefj,jamhcnnkihinmdlkakkaopbjbbcngflc,ggkkehgbnfjpeggfpleeakpidbkibbmn,ojhpjlocmbogdgmfpkhlaaeamibhnphh,efniojlnjndmcbiieegkicadnoecjjef,jflookgnkcckhobaglndicnbbgbonegd,hfnkpimlhhgieaddgfemjhofmfblmnib,jflhchccmppkfebkiaminageehmchikm,eeigpngbgcognadeebkilcpcaedhellh,gonpemdgkjcecdgbnaabipppbmgfggbe</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Update-Updater" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Updater</stringProp>
                  <stringProp name="Header.value">chrome-121.0.6167.160</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Update-Interactivity" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Update-Interactivity</stringProp>
                  <stringProp name="Header.value">bg</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Select_productID" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/rs/RoamingSoapService.svc-19" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;s:Envelope xmlns:s=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;s:Header&gt;&lt;Header xmlns=&quot;http://schemas.microsoft.com/office/roamingservice&quot;&gt;&lt;ClientInfo xmlns=&quot;http://schemas.datacontract.org/2004/07/Microsoft.Office.Web.Roaming.SoapObjects&quot;&gt;&lt;Client&gt;RS_O16Cache&lt;/Client&gt;&lt;ClientVersion&gt;16.0.17231.20194&lt;/ClientVersion&gt;&lt;Protocol&gt;1.0&lt;/Protocol&gt;&lt;/ClientInfo&gt;&lt;/Header&gt;&lt;/s:Header&gt;&lt;s:Body&gt;&lt;a:WriteSettingsRequest xmlns=&quot;http://schemas.datacontract.org/2004/07/Microsoft.Office.Web.Roaming.SoapObjects&quot; xmlns:a=&quot;http://schemas.microsoft.com/office/roamingservice&quot;&gt;&lt;a:Identity&gt;t=EwBYA/btAwAUhuzzuZUR5hpL0xjdlwZB/ZWqE0gAATiDShaw5eOparrOyTT7gjO/ps16Jnda3yCU8+SlmNyAT9oBdRJbzfUkTOUvDWducS6HIqMGnGS5ux73NUTS04yICZmRvlQLgzopGgfU63cbosJuTFAjnwgIGOCjm6JI1ZEiIu+AT57rj+y3hwLLPGgN+GG3KPhfDMDdkd4Xo+CNEtuXOuR2siGQaaBphsej41VUlOnulUIng1zHbhFylatq7VBQRklQ37GoSN2/ANtZ7KKn6huRtOhPa6EjlHTpRnoSDT2yuDNnBe5C/GIC4oMyArmTMQY8CFiqVTYWgzYXD3treJYHpTLnuHoQ9wnagM14NScwfKCZridGoeM32TsDZgAACFTqVDIIYtEPKALAsKqNqO/OV8fG9jrnxN6I/ZnxHR5WwglFEZljlBFIZJ9nVwTSDQhH1rojZ9i3p1SdrHsh7WibxQQJaGp/NSMMJpKK2ijU1wudaYai11i4qWmYWi17Qa3R6Zx7kx0yS2Fwji3U05qj7VMyCYVP+ZDR4WIYtV9mSrw3emogS6JrQgjCo6C3o3P4tGg+qCHuIUUH0vBibIrDWcWWQ4fxkd3r3BgWum1ZVitVQkGyqEPEwfVxqv7bykaNMFkYOFA9vFKd1nJd8uFv2l044jbwKHhoOAoMsI4q9qU40YVzAFASkxq1yeVpb/kZdzrF7Peb3V3IAxUT1qcT3359zhsx/Zovz+Ha3B2/bLjFG4xOfhThjSSfzmEai28xkjiJdSdKllbDuCfYmajQsHBpJjYuEczBE/EEX8widT/HcmAptvau4Y2v0nq2hTMYO+YuCskwEU4nOANJZVRbCpIujlFkrWpbUntgX0fQ7/hXI+47ZCNMMZ+ovsn8zymw8+7v2wpLv6wtqxkMSFxN2cgcOE9kptLcD6bcfHRBRe0MrSSH7PLvTz6dHHd9Grypb6+FaK3yDeQdSrzeR2BdoU4Lw4NvWoZijAbf+a6cmhG3dqTmo/I3An6kBXDXl78PA3d89bo1xCzZNzmetN4SSN+jOl9hEcGqxzsyFbrCCcm0L/k1X/2S7P+pM3ry/VcGXEu7K/1TBxLgjfABeEnuQsZqOmel8NUf3Tr/62rXswZuAg==&lt;/a:Identity&gt;&lt;a:MachineId&gt;21C24014-E276-4C72-9FF7-D835BB2CA2BB&lt;/a:MachineId&gt;&lt;a:Generation&gt;2&lt;/a:Generation&gt;&lt;a:Settings&gt;&lt;SettingData&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1366&lt;/Id&gt;&lt;Knowledge&gt;590&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;Value&gt;0&lt;/Value&gt;&lt;/SettingData&gt;&lt;/a:Settings&gt;&lt;/a:WriteSettingsRequest&gt;&lt;/s:Body&gt;&lt;/s:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">roaming.officeapps.live.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/rs/RoamingSoapService.svc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="SOAPAction" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://tempuri.org/IRoamingSettingsService/WriteSettings&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MS-WebServices/1.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/rs/RoamingSoapService.svc-20" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;s:Envelope xmlns:s=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;s:Header&gt;&lt;Header xmlns=&quot;http://schemas.microsoft.com/office/roamingservice&quot;&gt;&lt;ClientInfo xmlns=&quot;http://schemas.datacontract.org/2004/07/Microsoft.Office.Web.Roaming.SoapObjects&quot;&gt;&lt;Client&gt;RS_O16Cache&lt;/Client&gt;&lt;ClientVersion&gt;16.0.17231.20194&lt;/ClientVersion&gt;&lt;Protocol&gt;1.0&lt;/Protocol&gt;&lt;/ClientInfo&gt;&lt;/Header&gt;&lt;/s:Header&gt;&lt;s:Body&gt;&lt;a:ReadSettingsRequest xmlns=&quot;http://schemas.datacontract.org/2004/07/Microsoft.Office.Web.Roaming.SoapObjects&quot; xmlns:a=&quot;http://schemas.microsoft.com/office/roamingservice&quot;&gt;&lt;a:Identity&gt;t=EwBYA/btAwAUhuzzuZUR5hpL0xjdlwZB/ZWqE0gAATiDShaw5eOparrOyTT7gjO/ps16Jnda3yCU8+SlmNyAT9oBdRJbzfUkTOUvDWducS6HIqMGnGS5ux73NUTS04yICZmRvlQLgzopGgfU63cbosJuTFAjnwgIGOCjm6JI1ZEiIu+AT57rj+y3hwLLPGgN+GG3KPhfDMDdkd4Xo+CNEtuXOuR2siGQaaBphsej41VUlOnulUIng1zHbhFylatq7VBQRklQ37GoSN2/ANtZ7KKn6huRtOhPa6EjlHTpRnoSDT2yuDNnBe5C/GIC4oMyArmTMQY8CFiqVTYWgzYXD3treJYHpTLnuHoQ9wnagM14NScwfKCZridGoeM32TsDZgAACFTqVDIIYtEPKALAsKqNqO/OV8fG9jrnxN6I/ZnxHR5WwglFEZljlBFIZJ9nVwTSDQhH1rojZ9i3p1SdrHsh7WibxQQJaGp/NSMMJpKK2ijU1wudaYai11i4qWmYWi17Qa3R6Zx7kx0yS2Fwji3U05qj7VMyCYVP+ZDR4WIYtV9mSrw3emogS6JrQgjCo6C3o3P4tGg+qCHuIUUH0vBibIrDWcWWQ4fxkd3r3BgWum1ZVitVQkGyqEPEwfVxqv7bykaNMFkYOFA9vFKd1nJd8uFv2l044jbwKHhoOAoMsI4q9qU40YVzAFASkxq1yeVpb/kZdzrF7Peb3V3IAxUT1qcT3359zhsx/Zovz+Ha3B2/bLjFG4xOfhThjSSfzmEai28xkjiJdSdKllbDuCfYmajQsHBpJjYuEczBE/EEX8widT/HcmAptvau4Y2v0nq2hTMYO+YuCskwEU4nOANJZVRbCpIujlFkrWpbUntgX0fQ7/hXI+47ZCNMMZ+ovsn8zymw8+7v2wpLv6wtqxkMSFxN2cgcOE9kptLcD6bcfHRBRe0MrSSH7PLvTz6dHHd9Grypb6+FaK3yDeQdSrzeR2BdoU4Lw4NvWoZijAbf+a6cmhG3dqTmo/I3An6kBXDXl78PA3d89bo1xCzZNzmetN4SSN+jOl9hEcGqxzsyFbrCCcm0L/k1X/2S7P+pM3ry/VcGXEu7K/1TBxLgjfABeEnuQsZqOmel8NUf3Tr/62rXswZuAg==&lt;/a:Identity&gt;&lt;a:MachineId&gt;88B03D43-2925-4547-B9EF-FC77D7F69F1C&lt;/a:MachineId&gt;&lt;a:NetworkCost&gt;1&lt;/a:NetworkCost&gt;&lt;a:Generation&gt;2&lt;/a:Generation&gt;&lt;a:Settings&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1257&lt;/Id&gt;&lt;Knowledge&gt;520&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1065&lt;/Id&gt;&lt;Knowledge&gt;575&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1356&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1259&lt;/Id&gt;&lt;Knowledge&gt;537&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1067&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1173&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1077&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1110&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1174&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1170&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1176&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1180&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1181&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1183&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1186&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1196&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1197&lt;/Id&gt;&lt;Knowledge&gt;262&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1219&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1232&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1357&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1254&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1303&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1256&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1297&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1258&lt;/Id&gt;&lt;Knowledge&gt;552&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1272&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1298&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1273&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1373&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1270&lt;/Id&gt;&lt;Knowledge&gt;277&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1271&lt;/Id&gt;&lt;Knowledge&gt;277&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1276&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1366&lt;/Id&gt;&lt;Knowledge&gt;591&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1277&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1313&lt;/Id&gt;&lt;Knowledge&gt;267&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1274&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1275&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1317&lt;/Id&gt;&lt;Knowledge&gt;264&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1278&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1368&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1304&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1311&lt;/Id&gt;&lt;Knowledge&gt;257&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1312&lt;/Id&gt;&lt;Knowledge&gt;264&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1321&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1322&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1324&lt;/Id&gt;&lt;Knowledge&gt;278&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1325&lt;/Id&gt;&lt;Knowledge&gt;278&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1327&lt;/Id&gt;&lt;Knowledge&gt;278&lt;/Knowledge&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1329&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1335&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1172&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1331&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1354&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1364&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1338&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1345&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context a:nil=&quot;true&quot; xmlns:a=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&lt;Id&gt;1253&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;SettingInfo&gt;&lt;Context&gt;&lt;Id&gt;a5cb4952-91ff-81d6-5988-615852d2ca0f&lt;/Id&gt;&lt;/Context&gt;&lt;Id&gt;1057&lt;/Id&gt;&lt;/SettingInfo&gt;&lt;/a:Settings&gt;&lt;/a:ReadSettingsRequest&gt;&lt;/s:Body&gt;&lt;/s:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">roaming.officeapps.live.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/rs/RoamingSoapService.svc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="SOAPAction" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://tempuri.org/IRoamingSettingsService/ReadSettings&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MS-WebServices/1.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-22" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;V&#xd;
Thttps://petstore.octoperf.com/actions/Catalog.action?viewProduct=&amp;productId=${C_ProductID}(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-21" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="viewProduct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">viewProduct</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">${C_ProductID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action?viewCategory=&amp;categoryId=${C_Petname}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C_ItemID</stringProp>
              <stringProp name="RegexExtractor.regex">itemId=(.*?)&quot;&gt;EST-1</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_ItemID_Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-56677412">Description</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C_</stringProp>
              <stringProp name="RegexExtractor.regex">itemId=(.*?)&quot;&gt;EST-1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ws/v3/batch?name=mailbox.sync&amp;hash=4d37b813&amp;appId=YMailNorrin&amp;ymreqid=38b70a3d-fd49-8aa6-1c7d-7c0011013200&amp;wssid=V2*k8urW7lKrAK-24" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="batchJson" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">batchJson</stringProp>
                  <stringProp name="Argument.value">{&quot;requests&quot;:{&quot;id&quot;:&quot;GetFolders&quot;,&quot;uri&quot;:&quot;/ws/v3/mailboxes/@.id==VjN-lly8XtTR1fIzkbE1YDp7upX1xeD_Xz8hifPQ787pqWL83QPEUFyn86RkSBBUpA0E4QS589m2ULn4HOf3kMCF_g/folders&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;payloadType&quot;:&quot;embedded&quot;},&quot;responseType&quot;:&quot;json&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">in.mail.yahoo.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/ws/v3/batch?name=mailbox.sync&amp;hash=4d37b813&amp;appId=YMailNorrin&amp;ymreqid=38b70a3d-fd49-8aa6-1c7d-7c0011013200&amp;wssid=V2*k8urW7lKrAK</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/d/log?appid=mail_app-23" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;platform&quot;:&quot;browser&quot;,&quot;app&quot;:&quot;mail_app&quot;,&quot;env&quot;:&quot;production&quot;,&quot;colo&quot;:&quot;sg3&quot;,&quot;farm&quot;:&quot;5014&quot;,&quot;shardId&quot;:&quot;112646_xhG_gcgXnHy5BJnacEFlLg&quot;,&quot;yid&quot;:&quot;zuamyf54hfaardohqw2mi5ebfcyv6for6tct57ut&quot;,&quot;locale&quot;:&quot;en-IN&quot;,&quot;region&quot;:&quot;in&quot;,&quot;bldVer&quot;:&quot;1.0.12489&quot;,&quot;buildNumber&quot;:&quot;1.0.12489&quot;,&quot;partnr&quot;:&quot;&quot;,&quot;prdct&quot;:&quot;norrin&quot;,&quot;adFree&quot;:false,&quot;paidUserType&quot;:&quot;free&quot;,&quot;conv&quot;:true,&quot;buckets&quot;:0,&quot;userSegId&quot;:&quot;3&quot;,&quot;appName&quot;:&quot;mail_app&quot;,&quot;os&quot;:&quot;Windows 10&quot;,&quot;browser&quot;:&quot;Chrome 121.0.0.0&quot;,&quot;partner&quot;:&quot;&quot;,&quot;rid&quot;:&quot;662jvntisa8lp&quot;},&quot;events&quot;:[{&quot;type&quot;:&quot;feature&quot;,&quot;featureEvent&quot;:&quot;success&quot;,&quot;featureName&quot;:&quot;setup&quot;,&quot;component&quot;:&quot;norrin/service_worker&quot;,&quot;message&quot;:&quot;feature_success&quot;,&quot;data&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">in.mail.yahoo.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/d/log?appid=mail_app</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com/desktop_sw.js</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/edgedl/diffgen-puffin/lmelglejhemejginpboagddgdfbepgmp/1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f/1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48/b0309f505d747d23dd12ce674a3f58ee302fd42040f155251d0ed1620e8f775a.puff-26" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">edgedl.me.gvt1.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/edgedl/diffgen-puffin/lmelglejhemejginpboagddgdfbepgmp/1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f/1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48/b0309f505d747d23dd12ce674a3f58ee302fd42040f155251d0ed1620e8f775a.puff</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft BITS/7.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/edgedl/diffgen-puffin/lmelglejhemejginpboagddgdfbepgmp/1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f/1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48/b0309f505d747d23dd12ce674a3f58ee302fd42040f155251d0ed1620e8f775a.puff-27" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">edgedl.me.gvt1.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/edgedl/diffgen-puffin/lmelglejhemejginpboagddgdfbepgmp/1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f/1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48/b0309f505d747d23dd12ce674a3f58ee302fd42040f155251d0ed1620e8f775a.puff</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="If-Unmodified-Since" elementType="Header">
                  <stringProp name="Header.name">If-Unmodified-Since</stringProp>
                  <stringProp name="Header.value">Mon, 05 Feb 2024 18:47:56 GMT</stringProp>
                </elementProp>
                <elementProp name="Range" elementType="Header">
                  <stringProp name="Header.name">Range</stringProp>
                  <stringProp name="Header.value">bytes=0-1119</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft BITS/7.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/edgedl/diffgen-puffin/lmelglejhemejginpboagddgdfbepgmp/1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f/1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48/b0309f505d747d23dd12ce674a3f58ee302fd42040f155251d0ed1620e8f775a.puff-28" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">edgedl.me.gvt1.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/edgedl/diffgen-puffin/lmelglejhemejginpboagddgdfbepgmp/1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f/1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48/b0309f505d747d23dd12ce674a3f58ee302fd42040f155251d0ed1620e8f775a.puff</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="If-Unmodified-Since" elementType="Header">
                  <stringProp name="Header.name">If-Unmodified-Since</stringProp>
                  <stringProp name="Header.value">Mon, 05 Feb 2024 18:47:56 GMT</stringProp>
                </elementProp>
                <elementProp name="Range" elementType="Header">
                  <stringProp name="Header.name">Range</stringProp>
                  <stringProp name="Header.value">bytes=1120-2358</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft BITS/7.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/service/update2/json-29" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:{&quot;@os&quot;:&quot;win&quot;,&quot;@updater&quot;:&quot;chrome&quot;,&quot;acceptformat&quot;:&quot;crx3,puff&quot;,&quot;app&quot;:[{&quot;appid&quot;:&quot;lmelglejhemejginpboagddgdfbepgmp&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:lwl:&quot;,&quot;cohortname&quot;:&quot;Auto&quot;,&quot;enabled&quot;:true,&quot;event&quot;:[{&quot;download_time_ms&quot;:4068,&quot;downloaded&quot;:2359,&quot;downloader&quot;:&quot;bits&quot;,&quot;eventresult&quot;:1,&quot;eventtype&quot;:14,&quot;nextversion&quot;:&quot;433&quot;,&quot;previousversion&quot;:&quot;432&quot;,&quot;total&quot;:2359,&quot;url&quot;:&quot;http://edgedl.me.gvt1.com/edgedl/diffgen-puffin/lmelglejhemejginpboagddgdfbepgmp/1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f/1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48/b0309f505d747d23dd12ce674a3f58ee302fd42040f155251d0ed1620e8f775a.puff&quot;},{&quot;diffresult&quot;:1,&quot;eventresult&quot;:1,&quot;eventtype&quot;:3,&quot;nextfp&quot;:&quot;1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f&quot;,&quot;nextversion&quot;:&quot;433&quot;,&quot;previousfp&quot;:&quot;1.cadbf9a5f27721576d77d35576f37ca01ac34d86bce73958bf71cde62af71b48&quot;,&quot;previousversion&quot;:&quot;432&quot;}],&quot;installdate&quot;:5909,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.d714e27bbcdedab3f9f9ca92462ee6dc8ca779849aefdd27af92009a9d55a38f&quot;}]},&quot;version&quot;:&quot;433&quot;}],&quot;arch&quot;:&quot;x64&quot;,&quot;dedup&quot;:&quot;cr&quot;,&quot;domainjoined&quot;:true,&quot;hw&quot;:{&quot;avx&quot;:true,&quot;physmemory&quot;:4,&quot;sse&quot;:true,&quot;sse2&quot;:true,&quot;sse3&quot;:true,&quot;sse41&quot;:true,&quot;sse42&quot;:true,&quot;ssse3&quot;:true},&quot;ismachine&quot;:true,&quot;nacl_arch&quot;:&quot;x86-64&quot;,&quot;os&quot;:{&quot;arch&quot;:&quot;x86_64&quot;,&quot;platform&quot;:&quot;Windows&quot;,&quot;version&quot;:&quot;10.0.19045.3930&quot;},&quot;prodversion&quot;:&quot;121.0.6167.160&quot;,&quot;protocol&quot;:&quot;3.1&quot;,&quot;requestid&quot;:&quot;{a8c0d1e4-3fd4-4d3a-8249-31e9cfbcac8d}&quot;,&quot;sessionid&quot;:&quot;{7d327a11-dd8d-47ae-8e15-8efe3366860c}&quot;,&quot;updaterversion&quot;:&quot;121.0.6167.160&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">update.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/service/update2/json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/edgedl/diffgen-puffin/jflhchccmppkfebkiaminageehmchikm/1.84bce1360e6c43a7ecfda79e1ceed5e28e6690c55aaadc82af8dc0bad9d3ca51/1.b7f0ea7d529f6bda390bc5e8cc05551a6abf4b5d40243ece003b5dba5d7b4089/6135d527db0f52595a19079f888f82eb702afa83585c1667b440827387352c98.puff-30" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">edgedl.me.gvt1.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/edgedl/diffgen-puffin/jflhchccmppkfebkiaminageehmchikm/1.84bce1360e6c43a7ecfda79e1ceed5e28e6690c55aaadc82af8dc0bad9d3ca51/1.b7f0ea7d529f6bda390bc5e8cc05551a6abf4b5d40243ece003b5dba5d7b4089/6135d527db0f52595a19079f888f82eb702afa83585c1667b440827387352c98.puff</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft BITS/7.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/d/log?count=5&amp;appid=mail_app&amp;appver=1.0.12489&amp;mode=unload-31" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;meta&quot;:{&quot;platform&quot;:&quot;browser&quot;,&quot;app&quot;:&quot;mail_app&quot;,&quot;env&quot;:&quot;production&quot;,&quot;colo&quot;:&quot;sg3&quot;,&quot;farm&quot;:&quot;5014&quot;,&quot;shardId&quot;:&quot;112646_xhG_gcgXnHy5BJnacEFlLg&quot;,&quot;yid&quot;:&quot;zuamyf54hfaardohqw2mi5ebfcyv6for6tct57ut&quot;,&quot;locale&quot;:&quot;en-IN&quot;,&quot;region&quot;:&quot;in&quot;,&quot;bldVer&quot;:&quot;1.0.12489&quot;,&quot;buildNumber&quot;:&quot;1.0.12489&quot;,&quot;partnr&quot;:&quot;&quot;,&quot;prdct&quot;:&quot;norrin&quot;,&quot;adFree&quot;:false,&quot;paidUserType&quot;:&quot;free&quot;,&quot;conv&quot;:true,&quot;buckets&quot;:0,&quot;userSegId&quot;:&quot;3&quot;,&quot;activity&quot;:&quot;header-mail&quot;,&quot;pspid&quot;:&quot;2114723002&quot;,&quot;_GUID&quot;:&quot;IPQLF4BJOPYTG2AEA3L3U5SHQA&quot;,&quot;tabs&quot;:false,&quot;prvwpan&quot;:0,&quot;r13e&quot;:0,&quot;vwCntxt&quot;:&quot;msgLst_inbx&quot;,&quot;acctDomain&quot;:&quot;yahoo.com&quot;,&quot;acctType&quot;:&quot;PRIMARY&quot;,&quot;accountId&quot;:&quot;1&quot;,&quot;impn&quot;:0,&quot;theme&quot;:&quot;DEFAULT-LIGHT&quot;,&quot;prvdr&quot;:&quot;yahoo&quot;,&quot;regType&quot;:&quot;&quot;,&quot;authType&quot;:&quot;NONE&quot;,&quot;pshNtfctnsSbscrbd&quot;:false},&quot;metaDotData&quot;:{},&quot;events&quot;:[{&quot;component&quot;:&quot;norrin/action_error&quot;,&quot;message&quot;:&quot;GEMINI_AD_FAILED failed&quot;,&quot;data&quot;:{&quot;error&quot;:{&quot;errorCode&quot;:&quot;OUTBOUND&quot;,&quot;isOnline&quot;:true,&quot;name&quot;:&quot;HttpTransport.OutboundError&quot;,&quot;message&quot;:&quot;Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.&quot;,&quot;stack&quot;:&quot;HttpTransport.OutboundError: Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.\n at https://s.yimg.com/nq/nr/js/mail_app_es6_7788c5276a82411267e5.bundle.js?__WB_REVISION__=1.0.12489:2:2844220\n at T (https://s.yimg.com/nq/nr/js/mail_app_es6_7788c5276a82411267e5.bundle.js?__WB_REVISION__=1.0.12489:2:2844309)\n at https://s.yimg.com/nq/nr/js/mail_app_es6_7788c5276a82411267e5.bundle.js?__WB_REVISION__=1.0.12489:2:2846079\n at E.callback (https://s.yimg.com/nq/nr/js/mail_app_es6_vendor_1bdf4aeef85c296c9e51.bundle.js?__WB_REVISION__=1.0.12489:2:651758)\n at E.crossDomainError (https://s.yimg.com/nq/nr/js/mail_app_es6_vendor_1bdf4aeef85c296c9e51.bundle.js?__WB_REVISION__=1.0.12489:2:652063)\n at XMLHttpRequest.&lt;anonymous&gt; (https://s.yimg.com/nq/nr/js/mail_app_es6_vendor_1bdf4aeef85c296c9e51.bundle.js?__WB_REVISION__=1.0.12489:2:653453)&quot;}}},{&quot;type&quot;:&quot;feature&quot;,&quot;featureEvent&quot;:&quot;success&quot;,&quot;featureName&quot;:&quot;mail_api_client_call&quot;,&quot;component&quot;:&quot;norrin/base_client&quot;,&quot;message&quot;:&quot;feature_success&quot;,&quot;data&quot;:{&quot;isOnline&quot;:true,&quot;apiName&quot;:&quot;checkMail&quot;,&quot;ymreqid&quot;:&quot;38b70a3d-fd49-8aa6-1c7d-7c0010013200&quot;,&quot;retryCount&quot;:1,&quot;retryErrorCode&quot;:&quot;OUTBOUND&quot;,&quot;retryStatusCode&quot;:&quot;&quot;,&quot;retryYmreqid&quot;:&quot;38b70a3d-fd49-8aa6-1c7d-7c000f013200&quot;}},{&quot;type&quot;:&quot;feature&quot;,&quot;featureEvent&quot;:&quot;latency&quot;,&quot;featureName&quot;:&quot;mail_api_client_call&quot;,&quot;startTime&quot;:1707419411767,&quot;time&quot;:24490,&quot;component&quot;:&quot;norrin/base_client&quot;,&quot;message&quot;:&quot;feature_latency&quot;,&quot;data&quot;:{&quot;isOnline&quot;:true,&quot;apiName&quot;:&quot;checkMail&quot;,&quot;ymreqid&quot;:&quot;38b70a3d-fd49-8aa6-1c7d-7c0010013200&quot;,&quot;retryCount&quot;:1,&quot;retryErrorCode&quot;:&quot;OUTBOUND&quot;,&quot;retryStatusCode&quot;:&quot;&quot;,&quot;retryYmreqid&quot;:&quot;38b70a3d-fd49-8aa6-1c7d-7c000f013200&quot;}},{&quot;type&quot;:&quot;feature&quot;,&quot;featureEvent&quot;:&quot;success&quot;,&quot;featureName&quot;:&quot;mail_api_client_call&quot;,&quot;component&quot;:&quot;norrin/base_client&quot;,&quot;message&quot;:&quot;feature_success&quot;,&quot;data&quot;:{&quot;isOnline&quot;:true,&quot;apiName&quot;:&quot;checkMail&quot;,&quot;ymreqid&quot;:&quot;38b70a3d-fd49-8aa6-1c7d-7c0011013200&quot;,&quot;retryCount&quot;:0}},{&quot;type&quot;:&quot;feature&quot;,&quot;featureEvent&quot;:&quot;latency&quot;,&quot;featureName&quot;:&quot;mail_api_client_call&quot;,&quot;startTime&quot;:1707419507205,&quot;time&quot;:1134,&quot;component&quot;:&quot;norrin/base_client&quot;,&quot;message&quot;:&quot;feature_latency&quot;,&quot;data&quot;:{&quot;isOnline&quot;:true,&quot;apiName&quot;:&quot;checkMail&quot;,&quot;ymreqid&quot;:&quot;38b70a3d-fd49-8aa6-1c7d-7c0011013200&quot;,&quot;retryCount&quot;:0}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">in.mail.yahoo.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/d/log?count=5&amp;appid=mail_app&amp;appver=1.0.12489&amp;mode=unload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://in.mail.yahoo.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/edgedl/diffgen-puffin/jflhchccmppkfebkiaminageehmchikm/1.84bce1360e6c43a7ecfda79e1ceed5e28e6690c55aaadc82af8dc0bad9d3ca51/1.b7f0ea7d529f6bda390bc5e8cc05551a6abf4b5d40243ece003b5dba5d7b4089/6135d527db0f52595a19079f888f82eb702afa83585c1667b440827387352c98.puff-32" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">edgedl.me.gvt1.com</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">/edgedl/diffgen-puffin/jflhchccmppkfebkiaminageehmchikm/1.84bce1360e6c43a7ecfda79e1ceed5e28e6690c55aaadc82af8dc0bad9d3ca51/1.b7f0ea7d529f6bda390bc5e8cc05551a6abf4b5d40243ece003b5dba5d7b4089/6135d527db0f52595a19079f888f82eb702afa83585c1667b440827387352c98.puff</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="If-Unmodified-Since" elementType="Header">
                  <stringProp name="Header.name">If-Unmodified-Since</stringProp>
                  <stringProp name="Header.value">Thu, 08 Feb 2024 04:56:07 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft BITS/7.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/log?format=json&amp;hasfast=true&amp;authuser=0-33" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://pagespeed.web.dev/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pagespeed.web.dev</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-goog-authuser</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/service/update2/json-34" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;request&quot;:{&quot;@os&quot;:&quot;win&quot;,&quot;@updater&quot;:&quot;chrome&quot;,&quot;acceptformat&quot;:&quot;crx3,puff&quot;,&quot;app&quot;:[{&quot;appid&quot;:&quot;jflhchccmppkfebkiaminageehmchikm&quot;,&quot;brand&quot;:&quot;CHBF&quot;,&quot;cohort&quot;:&quot;1:26yf:&quot;,&quot;cohortname&quot;:&quot;Stable&quot;,&quot;enabled&quot;:true,&quot;event&quot;:[{&quot;download_time_ms&quot;:4046,&quot;downloaded&quot;:2159,&quot;downloader&quot;:&quot;bits&quot;,&quot;eventresult&quot;:1,&quot;eventtype&quot;:14,&quot;nextversion&quot;:&quot;2024.2.7.5&quot;,&quot;previousversion&quot;:&quot;2024.2.7.4&quot;,&quot;total&quot;:2159,&quot;url&quot;:&quot;http://edgedl.me.gvt1.com/edgedl/diffgen-puffin/jflhchccmppkfebkiaminageehmchikm/1.84bce1360e6c43a7ecfda79e1ceed5e28e6690c55aaadc82af8dc0bad9d3ca51/1.b7f0ea7d529f6bda390bc5e8cc05551a6abf4b5d40243ece003b5dba5d7b4089/6135d527db0f52595a19079f888f82eb702afa83585c1667b440827387352c98.puff&quot;},{&quot;diffresult&quot;:1,&quot;eventresult&quot;:1,&quot;eventtype&quot;:3,&quot;nextfp&quot;:&quot;1.84bce1360e6c43a7ecfda79e1ceed5e28e6690c55aaadc82af8dc0bad9d3ca51&quot;,&quot;nextversion&quot;:&quot;2024.2.7.5&quot;,&quot;previousfp&quot;:&quot;1.b7f0ea7d529f6bda390bc5e8cc05551a6abf4b5d40243ece003b5dba5d7b4089&quot;,&quot;previousversion&quot;:&quot;2024.2.7.4&quot;}],&quot;installdate&quot;:6158,&quot;lang&quot;:&quot;en-US&quot;,&quot;packages&quot;:{&quot;package&quot;:[{&quot;fp&quot;:&quot;1.84bce1360e6c43a7ecfda79e1ceed5e28e6690c55aaadc82af8dc0bad9d3ca51&quot;}]},&quot;version&quot;:&quot;2024.2.7.5&quot;}],&quot;arch&quot;:&quot;x64&quot;,&quot;dedup&quot;:&quot;cr&quot;,&quot;domainjoined&quot;:true,&quot;hw&quot;:{&quot;avx&quot;:true,&quot;physmemory&quot;:4,&quot;sse&quot;:true,&quot;sse2&quot;:true,&quot;sse3&quot;:true,&quot;sse41&quot;:true,&quot;sse42&quot;:true,&quot;ssse3&quot;:true},&quot;ismachine&quot;:true,&quot;nacl_arch&quot;:&quot;x86-64&quot;,&quot;os&quot;:{&quot;arch&quot;:&quot;x86_64&quot;,&quot;platform&quot;:&quot;Windows&quot;,&quot;version&quot;:&quot;10.0.19045.3930&quot;},&quot;prodversion&quot;:&quot;121.0.6167.160&quot;,&quot;protocol&quot;:&quot;3.1&quot;,&quot;requestid&quot;:&quot;{6ca9b8da-73eb-404f-8d50-e6524e0af832}&quot;,&quot;sessionid&quot;:&quot;{7d327a11-dd8d-47ae-8e15-8efe3366860c}&quot;,&quot;updaterversion&quot;:&quot;121.0.6167.160&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">update.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/service/update2/json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add_to_Cart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-36" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;V&#xd;
Thttps://petstore.octoperf.com/actions/Cart.action?addItemToCart=&amp;workingItemId=${C_ItemID}(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-37" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;QUIC&quot;,&quot;request_age_ms&quot;:412773,&quot;request_elapsed_ms&quot;:145,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:84588,&quot;request_elapsed_ms&quot;:16563,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Cart.action-35" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="addItemToCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">addItemToCart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="workingItemId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">workingItemId</stringProp>
                  <stringProp name="Argument.value">${C_ItemID}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Catalog.action?viewProduct=&amp;productId=${C_ProductID}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.regex">updateCartQuantities&quot; type=&quot;submit&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.refname">C_updateCartQuantities</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_updateCartQuantities_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.regex">_sourcePage&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.refname">C_sourcePage_A2C</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_sourcePage_A2C_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C__fp_A2C</stringProp>
              <stringProp name="RegexExtractor.regex">__fp&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C__fp_A2C_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="80217846">Stock</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/pages/ChVDaHJvbWUvMTIxLjAuNjE2Ny4xNjASGQnfh7zKjxssDxIFDQKP-2gh3cZDcNVS_yMSGQlXcEoP_CRDXhIFDVUHEs4h3cZDcNVS_yM=-38" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alt</stringProp>
                  <stringProp name="Argument.value">proto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1/pages/ChVDaHJvbWUvMTIxLjAuNjE2Ny4xNjASGQnfh7zKjxssDxIFDQKP-2gh3cZDcNVS_yMSGQlXcEoP_CRDXhIFDVUHEs4h3cZDcNVS_yM=</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                  <stringProp name="Header.value">base64</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/log?format=json&amp;hasfast=true&amp;authuser=0-39" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://pagespeed.web.dev/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pagespeed.web.dev</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-goog-authuser</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Quantity_And_update to Cart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-40" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;3&#xd;
1https://petstore.octoperf.com/actions/Cart.action(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Cart.action-41" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="EST-4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">EST-4</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="updateCartQuantities" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">updateCartQuantities</stringProp>
                  <stringProp name="Argument.value">${C_updateCartQuantities}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">${C_sourcePage_A2C}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">${C__fp_A2C}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">EST-4 means quantity</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Cart.action?addItemToCart=&amp;workingItemId=${C_ItemID}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="128658724">Sub Total</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chrome-sync/command/?client=Google+Chrome&amp;client_id=ffJGd6P%2BI8qEhc6FWKviNw%3D%3D-42" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�Y}tS�&#x19;�7�z��&#x1c;�&#x1f;J�PjI)����M%��Iڛ�IӦm�&#x1c;\{�rs�u��&amp;)��:A&#x18;ʇ:&#x10;&#x10;EA���&#x19;��2�&#x1c;�M&#x11;�N&#x1c;:�r�&#xe;&apos;2u����ŴX�J�e����͛��}���{��y��5�&#x14;&#x15;�X�I&#x6;�h*�b5b���U�&#x1c;�Ε���X�^Q����-�x���ڹXRrf-m~T&#xc;�I�-�&#x11;LwX&#x4;{���PB;�py�&#x1e;k6��f;h;�y�&#xe;O�-�9:p�&#x1e;&#x15;�}&#x1d;^S�&quot;&#x4;%��n�c&#x19;Y�e�j�&#x1a;3-f����7}�g�-&#x5;�m�V&#x1f;9�&quot;_=y��1����V�����h����h\&#x3;&#x2;��G�&#x3;�%/��%~&#x7f;C=opW:��=�&#x19;꼍}�+m6k�PC�&#x1f;Z�&#xb;���&#xb;�v�%��J&#x1d;�&#x1;Ցb&quot;�JŒ�z}LH%SrB����&#x1c;&#x13;&#x12;���z�KIr4��2)&amp;,�U�k�ҫ&#x1b;�Bʓ�&#x3;�M��&#x8;P��Lz���#�P7�	�&#x0;��&#xf;=�g���3�&#x3;&#xf;�&#x7;�+&#xf;�`��`qͅ�g�8�7��f��II���:9&#x11;1k&amp;��(��1��p�M��&#x7b6;��S��W��wr�\��������g�/&#xf;�2���}7�4&#x2;�߁ŭ��wa�$��LJ&#x10;�D�\�}3r��:����&#x10;?1�����&#x16;|q��7GX�&amp;X�6i&#xb;�	���R��ع��?\�&#x11;T3&#x5;��b�ə�O�&#xf;[�&#x7f;�-�&#x18;a�[&#x13;�01D&#xd;��&#x1d;)!�&amp;�&amp;��i9&#x11;��bn����6��L	n��x��~��m�6&#x7bc;��#l�&#x7;&#x16;�&#x13;���&#xd;�&#x8;,�&#x1c;��&#x1a;�̊��&#x6;��wǺ{�e@&#x0;�N&#x1b;&#x0;gQB�&#x15;#������@�+j� ]&#x19;��/ �Y�&#x0;�}������a&quot;&#x1e;&lt;&amp;���x$�r4&#x12;b��M6���&#x18;�v��&#x1e;�5&quot;���&#x12;!�����4[&#x18;&#x13;&#x590;�kvq���ZQJ����o����s�`�{+�&#x1c;C��5 �&#x8;X80X&#x2;&#xc;������Z&#x3;�.㕢���}](�&#xb;K��ì&gt;U�.cM&#x4;A	&amp;#��&#x2;&#x6;&#x13;���M~#&#x6;3&lt;�&#x8;&#x4;�&#x13;&#x6;��&#x2;�&#xd;�ˑs&#x1f;�癯�&#x19;&#x18;,��q��_��v��g&#x6;T�=y�J�*%�f��,+���~9�&#xb;��&#x1e;]X%ESa�&#x14;-�&#xd;
3Q�,Da��&lt;��I�&#x19;CQ&#x88;�&#x8;�����&apos;�����B&#x2;νPsm~�DUR`&#x12;\�-J	&#x1d;��&amp;&#x4;��о}�z-{~�&#x1f;Z��ԕ��u2R&#x18;�jVk�MG��0D�O�?{�&#xf;��X	ސ�.Y��&quot;��M4��&amp;�RD���&gt;����LXH���p&lt;&#x1b;���D&#x13;�	BG�&#x18;�&#xc;6Yn��S��65u�n&#x7f;�&#x16;�S��&gt;�J��sd,̝�����&#x5;���&#x8;�$#&#xd;
I=iD.?(o�Л�}&#x1e;��|��w/1��&#x3;&#xf;�I�w��~e��0x[Μx�����e&#x7;�&#x1a;&#xd;����ܹs۩K&#xc;���9&#xf;M:���&#xd;
i��[��&#x18;�k5��_&gt;ph&#x8;�W7�\��t&#xe;A�&#x5;!�ymvɗJ�ۼ�.g��&#x1e;�y=b#^�6:%[��;3m&#x1e;��f�P���pyb�NC��}�KC�=���wn�ܰ�Ly�^C�����C�m&gt;��c&#x1b;/&#x11;v&#x1;P�&#x1e;&#x0;g�!܇�H[��M�weh4h&#xd;
�vX�&#xd;ސY����jB��Nф����mdڗq�&#x11;!&#x1d;w��I�)�&#x1b;嘣��N�D���xc��gM�X���Њ&#x11;D&#x12;mli�c]�h6k7���]{�kB��7�&#x1a;|z������`����e[�&#x1a;�8&#xb;)%����&#xf;X&#x2;j?�Mi��N��2~�Ŝ\�ȭ�|R�k�5�T�=�|P��Z�&#x3;��P�?W~�]�JOB3Ri-�&#x3;&#x7;�Y��&#xe;��R�:�z�Me㈈;�&#x1c;�/�6�W&#x17;��&#x18;&#x16;&#x11;0������a&#x2;AI���&#x4;&#x18;a0&#xd;
�	� &#xd;�&#x16;НQn+ȣ�Ŭ:2&#x16;&#x8;�Tܟ&#x14;��Q�|��&#x5;�*(&#x7f;&#x1d;,&#x1e;��&#xe;A;���&#xd;
&lt;�&amp;�&#x5;J�&#x10;0&#x1d;(&#x1;��&#xe;�m/B&#x0;�ֻ&#x7;&#x7f;T&#x3;�&#xd;
&#x13;܊s:�:����C/o:}|F &#x7f;m�&#x1d;&#x4;��&#x1b;A`&#x1d;8&#x5;��&#xd; p&#x1f;&#x8;&lt;&#xc;&#x2;�&#x2;w��&#x5;s&#x17;&#x1d;�&#x1e;����DKK�ar9ڛ;�v&#x1b;[��&#x19;���&#xd;
�e�&#x1;7	�Q��&#x4;�&#x84;�&#x12;0ˑ$L�,������&#x6;-�;p�Ĝ���~/&#x1f;�*P*��\����&#x5;P&gt;��Ím tW�%&#x8;����&#xd;
��!N&#x1;&#x8;@mze���!NmQ8u��S�6&#x1c;;&gt;�&apos;?&#x8;�&#x7;yNM]D_&#x7;���Σ&#x1d;p�uv�f�`�L���&#x1f;M��x:��;)_&#x7f;�bV?W�.cy#�P&#x4;&#xb;�&#xc;��&#x4;�&#x18;`��H���&#xc;�b&lt;�S�&#x16;��Mi�P&gt;�&#x1b;.:&#xd;
&#xd;5A&#x14;&#x1a;ݫ��&#xd;*(��&#x18;�F4�p�d�3�ŏ��|�P.~&#x0;#�G^�����&#x16;&#xd;&#x7;�)i��&#x12;&gt;x_8�D�]�Ɍ/&#x11;���(.�-,ɵ�է&#xd;
�eF�&#x1f;�I�&#x8;��_�	#J�&#x14;E�0j&#x14;���$&#xc;&#x8;�s�N%� _)����&#xf;�Nƌ����)�ެ��ax&#x1c;OK���)�&#x8;��J&#x1e;�Q�og�Q�`C^�a6�{��l�T�y&#x14;o&#x7;&#x11;�&#x17;���:�	C=D[o �v��En���;&#xd;
�e~&#x3;f&#x12;x���&#x2;��&#x4;I�0�&#x17;�0B0&#xc;��&lt;C�~-�[~���K�!~��a&quot;$V��_��&gt;&#x15;�?9�&#x16;&#xf;&#xf;M�x�Pwy|���y|��&#x7f;&#x5cc;�x^�a��ˉI���&#x14;;�0�����Z��r�M��P&#x12;q&#x1a;�DWo��,�1-]��V,SA��PA�N���&gt;*�Μ&#x5;���^&#x5;�=����&#x2;:��&#x0;z�3&#x15;���+�����N�5&#xd;zl�&#x1a;�g�4�/�Aw��	�8q-�����&#x17;&#x7f;-�v&#x1f;-��_U&#x1;m�7&#x1f;Z{�&#x1a;Z�v!�G�УG&#xd;вOT%�&#x16;��&#x1;&#x14;$��Қ�&#xd;� �&#x16;�ń�����d&#x8;��Y�v��a#)�|��Mt�ru��#�V&#xc;OK)��E�vZ�8&#x13;l�t��&#x19;kЋE���t��A�Ak8X[&#x17;o&#xd;GI&#x1;n7��S��&#x11;����&#xe;4&#x19;s�r��̈́;hk��&#x17;���Q���&lt;&#x58c;�!Z�:&#x13;&#x2;ր؍�n�i���r�P;�zShNs�1�H���V���z&#x13;5��mk\�$&#x1b;�]����l tig_dIu��r^��&amp;[�&#x18;^:O&#x1f;�}����IJ�\:&#x5f8;����!��&#x1d;s&#x4;��&#x16;&#x1b;]k�^�-�l�������d�H��V���A�,�N���x��d�C�&#x10;&#x1a;&apos;�&#x5;N�^?oQ��k�o&#x8;�^���u���|�;Z�ٍ�,��hG&#x4;���d&#xe;�g��5�H����~�ز�����&apos;�uA�R���&#x7;�#&#x2;�&#x12;2�2��&#x16;���-�`���x�������~$��&#x4;&#xf;&#x1b;Q��Y&#xd;
G�܌&quot;�O��*���E&#x14;P&#x3;�&#x16;B�t��H]X��T����������ό5�ؕ*&#x8;�(��+�Z&#x7f;��N���&#x1;�-&#x3;�?+^j&#xd;$䈠�:\Z&#x14;C��*&#x3;j0V�&#x6;D��&#x4;&#xc;g&#xc;8K�&#x2;�&#x1b;)&#xd;
#Y�#&#x5;?A�	F`I���&#x4;&#xc;e���O��&#x4;&#x13;�&#x2;p�:N�s/�Y&lt;&#x7;5&#x1a;��&#x15;Z.�D�BX�L1lX��/�K1��&#x17;*ع&#x16;G?���6�$&quot;�&#xd;&#x19;��&#x16;�9�&#xe;!ko���Xmg�[+�����&#x7f;&#x1;�j$�v &#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">clients4.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/chrome-sync/command/?client=Google+Chrome&amp;client_id=ffJGd6P%2BI8qEhc6FWKviNw%3D%3D</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AfB_byBDcRECoplYHnAv29dSeioLRIkmhnSqWpZFBcZccQSmZfRomLwpZdNjbpo0e5fhUZ-x5_mUzsjFzXKuReu4n4kcUtMETo_qUmz0jtZXFxNITrK_OIvANNZNI9WDLI2OkPx1QXwOrxac8xefmlHv1rRnL5kOhMLsKgg9ja_D-UrE1PoUOsKmVDtHjlP1o_n1np-cy47azJ9lI_Bwu93SryPV9SwxlrVl9VWq1nkNJr_0tR52254kdBlbIWv9usQJqt0bYnK7fb0aCgYKAdUSARMSFQHGX2MiuYEIWBiIM8qakllPxACatg0278</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Chrome WIN 121.0.6167.160 (8e23a63b5dead78825bec5ef48f4aeb5698ce21a-refs/branch-heads/6167@{#1764}) channel(stable)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-43" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:115455,&quot;request_elapsed_ms&quot;:278,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Proceedtocheckout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-45" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;B&#xd;
@https://petstore.octoperf.com/actions/Order.action?newOrderForm=(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-44" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="newOrderForm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">newOrderForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Cart.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.regex">option value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="RegexExtractor.refname">C_cardtype</stringProp>
              <stringProp name="RegexExtractor.default">C_cardtype_notfound</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.refname">C_sourcePage_paymentpage</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;_sourcePage&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_sourcePage_paymentpage_Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">2</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C__fp_Paymentspage</stringProp>
              <stringProp name="RegexExtractor.regex">__fp&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C__fp_Paymentspage_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C_newOrder</stringProp>
              <stringProp name="RegexExtractor.regex">type=&quot;submit&quot;\ value=&quot;(.*?)&quot;\</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_newOrder_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="TestPlan.comments">type=&quot;submit&quot;\ value=&quot;(.*?)&quot;\</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1294903784">Payment Details</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/pages/ChVDaHJvbWUvMTIxLjAuNjE2Ny4xNjASGQnfh7zKjxssDxIFDQKP-2ghNr5CrPFVeqASXwnYbZ1E9bUsRxIFDYxn654SBQ1e7ZgZEgUNvrgoFxIFDfFRl1gSBQ2xytC9EgUNN2TPmxIFDbwSbYcSBQ0FTHTSEgUNCn4fuBIFDXJ9AXwSBQ1ESB_fIXlXkShno0Rx-46" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alt</stringProp>
                  <stringProp name="Argument.value">proto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1/pages/ChVDaHJvbWUvMTIxLjAuNjE2Ny4xNjASGQnfh7zKjxssDxIFDQKP-2ghNr5CrPFVeqASXwnYbZ1E9bUsRxIFDYxn654SBQ1e7ZgZEgUNvrgoFxIFDfFRl1gSBQ2xytC9EgUNN2TPmxIFDbwSbYcSBQ0FTHTSEgUNCn4fuBIFDXJ9AXwSBQ1ESB_fIXlXkShno0Rx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                  <stringProp name="Header.value">base64</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Enter_Payment_details and Continue" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/OneCollector/1.0/-47" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�XK�&#x1c;W&#x15;�N�l;�M&#x14; &#x12;&#x12;&amp;8H!U�:�}-6��dD�&#x19;�c{&#x19;�t��%�tu�1�%&#x16;&#x8;���H�	oY�`�&#x9a;&#x15;+6�X�&#x7;`���&#x1e;�&#x3;d�����;�{�w���r�����ۣf���?��7&#x7f;�˟���&#x1b;/?no[�ݤ&#x1c;��W��XƱ9&#x8;��҇�ѱ��ߞ;���i��b��&apos;_��ܫ��i��n&gt;Ӯ��og��b�&#x1c;L�b���|�,;�~������&#x17;��Y�s/;�&#x1;�&#x7f;6����&#xd;�&#xc;c�%��l�A&#x11;���r�+&#x7;R&#xe;�&#x1f;���&#x1e;5�I��rkP/���yv��n���֛��/s)��-���-٪�&amp;�&#x1c;.�ワ&#x16;����5�D��&#x10;S���n�e��&#xb;ו�*��Q�U��~uq&#x3;�ե�����&#x0;z���^Ջz�\|0{:k��e&apos;7��O&#x7f;4|�_��(��}V�k&#xb;�e��w[~��&#x0;K&#xe;�ݰ��r�0j�&#x14;q�T���X��~&#x7f;���&#x7f;켸շwzV��&quot;�&#x1e;&#x6;&#xe;���&#xc;T�z��C&#x18;C���&apos;����J{[���&apos;�N��&#x17;&#x17;���=:��v������xܮg�����n7Ӻ��֫&apos;���dROF�v^/�&#x1c;�t��bo�ܫ�����z���h=_���rU���&#x12;�F�fU7��w�b�|�3;l���f����9ud&#x17;&#x1d;&#xf;��&#x12;�o�ϒ\e�U���`n�Y7�Io1~��ǫ�&#x2;���&#xe;��&gt;�/��r��U�U&#x2;�&#x6;��~R�^$��x�{���&#x19;�	��2��t�ā�.&#xd;&#x58b;j&#x5;pe��&#x7f;���pv�,Z�&#x13;��[�����&#x18;&#x1f;&#x1b;���z����R#���I�hn��?�&#x7;&#x13;_8+�0b=|e&#xf;��Z��r2�vⳫi�kst$�&#xe;��1;�ٿ?�i�s�����s	�2���r�򹊹.s-�6���v�������`�ɍ͍�-����%�Nr�s�r_�^r�s�s&#x1f;�P�A�A���������!�Q���1`��x4&#x1e;�&#x7;PJ��\D�1x�&#x6;|�,x&#x4;&#xf;�&#x1;V�V�U&#x0;V4�&#x3;�&#x0;�h�&#x5;P&#x1;L&#x1;H�x��&#x7;T���&#x1c;&#x0;&#x16;�y&#xe;m&#xe;�&#xe;�&#x1e;�&#x2;�x��h��&#xc;���@&#x5;&#x1c;	9�,&#x1e;�G�G�G�C&#x7;&#x5;&#x1d;T)x`D�}�&#x7;v�.J�&apos;�&#x13;�A&#x17;E[K�&#x15;tQ4:M��&#x6;s+��&#xd;�V&#x6;�2h3�&#xf;ڠ����&gt;��a��0Ρ&#xd;�(X^&#x1;?v&lt;&#x1e;�W�7����&#x11;�&quot;�E:&#x17;�&#x5;^&#xd;�k`�i&#xd;
o������&#x1;&#xf;���&#x1a;��&#xd;
�S�ޚ���&#x0;V��`�0B&#x18;&quot;��&#x6;v&#xd;�k�&#x530;3Na&lt;xw&#x18;��а��|�8D�&#x6;F&#xd;�&#x1a;��&#x8;&#x12;�(�&#x8;&#x13;� ���&#x11;)&#x1a;�5�ak&#x3;ܦTx&#x10;��5�O&lt;&#x1e;&#xf;�&#x10;/&#x6;:&#x18;��&#x0;�&#x1;f&#x3;�&#x6;8&#xd;p&#x1a;�o��mM�d�3���&#x18;�a؇8��G�&#x18;��&#x0;�&#x1;~&#x3;�&#x1a;�6�&#xd;&#x3;�&#x1a;�&#x5;&#x12;Rn��&#x1;f&#x3;�&#x6;66�&#x11;&#x3;�&#x6;1b��&#x2;���-�Z`��m�x���&#x5;V&#xb;{[����&#x16;���n����&#x16;�-b���&#x16;���s&#xb;],t�����&#x16;zX�a��M��m�&#x3;=,�����6�&gt;�?,��b�Zǭ�6ľuh�o,����&#x16;:Z�h����&#x16;:Z���?&#x16;zZ�i�&#xf;,|�&#x10;K&#xe;�9��A?�}��&#x7;&#x7;���&#x1b;�&#x3;tr��a�:��&#x10;GN�=���|�䠋�_&#x1c;�q��A&#x17;&#x1c;ox�&#xd;�&#xe;���/&#x1c;��&#x3;n&#x7;�8`v���&#x1;�&#x3;&gt;��q�&#x1b;&#x7;?8�t���^����&#x13;&#xf;&#x7f;x`�%ϫ�&#x3;���Ńo�����/&lt;0{��c�z�����&#x3;�&#x7;n&#xf;�xĻ�&gt;���&#x7;f&#xf;�{��&#x3;�&#x7;n&#xf;�&#x1e;G�G�{����yH�L�$�ao&#xf;�&#x1e;{���&#x1e;:x`��o&#x0;�&#x0;�&#x1;x&#x3;�&#x6;�7&#x8;�S�8 v&#x2;�&#x6;�S&#x16;c�7&#x0;o&#x0;�&#x0;[&#x7;�&#xc;����	��&#x0;&#x1b;&#x7;�&#x7f;&#x0;�&#x0;[&#x7;�-��l�X`&#xf;�&#x1e;`�`yX���&#x1b;c�&#x7;&#x2;t&#x8;�&#x1;�&#x6;&#xf;��K�&#xe;&#x1;�&#x3;�&#x7;ϣ&#x1d;k���ϣ&#x1e;{8@�@=`���&#xb;��G� &#x3;@�X�-�&#x11;&gt;��&#x17;`Ex,&#x1e;�&#x7;}�E�n&#x11;�E�&#x16;�W�/&quot;|&#x11;&#x15;&#x13;	��&#x8;&#x1d;#�E�/�av���&#x7;&#x11;� �&#x17;&#x11;:E�#B�&#x8;�&quot;t��&#x7;&#x11;zE�&#x15;�S�o&quot;�B�^&#x11;q&#x15;ៈ}&#x10;ᛈ�&#x15;&#x11;W&#x11;�D�.�T�N&#x11;�)r&#x18;�X�bp&#x11;&#x4;�&#x18;�&#x17;&#x18;&#x8;&#x5;ۘ�J&amp;��&#x19;�d&#xd;
+5?5?u��`&#x379;Lb�&#xc;&#x14;�k�i��Mo�K�i�Ә�J�6�!Ld%3Y�SJ�&#x2;����Le%sY&#x19;87pH���roJ��e�+����&#x14;��Q��@�,&#xd;��&amp;OSՔ�&#x5;n���Eq&#x6;v���,�HLz�\j��XNc�&#x16;�i��)I�c&#x1b;�t��)I��,TF&#x2;�R#�2B�&#x12;�rd/��D�R���S�Ni�y[��!�(�&#x1b;�0a&#xb;36�� Ϡ&#x7;��E%*����&#x1c;GUU�#��PUfr&#x8;vЫ�^Ud&amp;J�!�K��h&#xd;E�2�&#xb;&#x13;�0�&#xb;ӻ0�Cp&#x8;&#x19;��5&#x14;&#x1d;τ&#xf;�&#x5;&#x18;&#x2;�&#x16;R�&#x3;�&#x14;�&#xc;y&#x0;&#x4;{&#x19;&#x7;�&apos;��^&#x12;&#x1a;Eӑ&#x1a;&#x8;�&#x1;&#x4;W��&#x14;-��k&#x14;-D�&#x0;�(&#xc;&#x5;�&#x15;}N: �&#x0;B&#x12; :�.��y&#x1f;�odZ���&#x1; 8��5��&#xf;@$��&#xe;��&amp;fM̚HI&#xf;�|@H&#x6;Dӡ�&#xe;%&#x1f;&#x10;&#x12;&#x2;!&#x1b;@�TR��&#x11;)&#x19;&#x1;+*��&#x1b;I&#x6;9�&#xe;5t(I&#x1;&#x4;{I&#x1d;�&#xf; �Ke&#xc;�F� $&#xc; ��I�&#x3;g�� &#x8;&#x19;&#x2;&quot;�mt����&#x14; �KUI&#x1a; �&#x0;�b�&#x14;�&#x0;6��P_CϐP&#x8;&#x19;��F@���&#x1a;F1�&#x4;&#x4;�0l&#xd;=c�&#x19;C�-U%��&#xe;&quot;�e��L&#x8;ل�N&#x8;���L&#x8;�&#x4;�!&#x15;f�N��&#x1d;ԗ|BH&amp; 8�p�a&#x7;I4���D�i&#x3;�&#xb;!�&#x10;�(u��T��&#x2;��R_&#x12;&#xd;
&#x8;�ѫ���\&#x8;م�^`�s.U%���&apos;�&#x4;�P��Ӄ�&#xd;
�P&#x8;ل8�EN&#x1;a(&#x1c;&#x5;&#x7;ӫ����7R	!��Hd���7G�9�u.�qe:��&#x2;����&#x11;�c&#x1;�]&#x1c;��cL:z��BH/��&#x2;�&#x5;&#x3;s&#x0;�&#x5;&#x4;k&#x7;��g�y�3�&#x17;B�!d&#x17;&#x10;�{H2�,&#x3;&#x15;&#x8;�t�E�gdE�&#x19;T��&#x2;��po�[&#x8;Ʌ�Y�Oe&#xc;ѓ`&#x8;&#x19;&#x5;�&#x17;�&#x11;��QOf&#x1;��T�&#x13;�gH�f&#x8;y&#x6;&#x4;�&#x1d;�A�&#x1;a)&#x1c;&#x5;�Q&#x19;r&#xf;&#x8;vP&#x5;R&#xd;�G\���6 8D�&#xe;�e�&#x4;:��&#x2;�C�@��5$�&#x1f;d&#x19;B�!�&#x17;&#x10;,�&#x18;C�&#x17;&#x12;R-F��2$���j�l@p&#x6;�&#x7;r&#xe;&#x8;�B&#x5;&#x3;S4y��t�&#x16;�`�F�H&gt;��CH?x+C��=v�=�&#x1c;B�&#x1;���)��&#x15;�5&quot;#,R���&quot;�&#x10;2&#xd;!�&#x10;�&#xc;!ɀ�4�&apos;r&#x7;�X&#x8;�&#x5;2&#x11;&#x17;�6�tJ�&#xd;
1����LE��d���L`F�JU��`�),&lt;YY�,�K�7&#x16;�$&#x18;��B�V@�äj�s&#xd;kU�&#xe;�6�6��\*dS%�&#xe;�!�s&#x3;���%)&#x4;&#x4;�&quot;�&#x3;�&#x15;�y&#x8;Ea(R&#x1b;��M1&#x1c;Y&#xd;k&#xd;
��&#x0;f%��&#x14; 8D�Ws&#x6;�&#xd;
�_&#x16;�&#x10;lc)L����&#x4;&#x7;;v8&#xe;f�˪]�l�`&#x1b;�)(2&#x5;�:^�&#x1f;(R&#x3;���T��b=U��A�ڜ&#x5;��ZO�z�Չ�Y&#x17;�3����Nյ�z��&#x15;&#xb;g�7&#x15;}I�i&#x1a;!�]��}�.���kgu�ݮ+^;��U��u�&gt;�Fϗ��(&#xd;������v�&#x1e;7�&#xf;��ή�̖�j:��&#x1d;����^�x��&#x17;�{;��z��[��4���x�&gt;�����&#x1a;Zw����|Q/��$������q�S��s4��	Í_�kw�lNo���ջ����٪^̪)�\9����ͤ��]nS�&#xb;w���z��K�rPls&#x7;�hQ����{��^/�ۧ�l�&#xd;&#x1b;&apos;�K��Z��;�������&#x378;������ƽj5~�.֚s &#x11;ev~w4z�N&#xd;
wwG4��&#x19;&#x1f;�&#x1e;&#x1e;b�S�G�&#x5;�5���J&#xf;g�lqÙ���&#x1e;,����&#x2;&#x10;�&#x1f;x^��.��|Q�&#xf;t&#x1;�_&#x15;�&#x7;��@&lt;&amp;�1&#x2;��&lt;��&#xe;&lt;�W-V3�&#xe;��{O�/&#x1b;X�����&#x16;���}�7����v:&#x1;��:�֓&#x5f6;��jݮ�Q�R�q�:����a���R���Y�~�\OW�vR����%�h=&#x1e;#N�룽�Q�8�&#x17;�V��߯��&#x11;&lt;��2����t�,���9-�]�4��&#xc;��&amp;��&#x5;6&#x6;o+�̻:�ϼ�3��̻;���&#x1e;�&apos;���E��ä�E&#xd;
�ћ��t��&#x16;�&#x12;&#x1d;r&#x1a;�C�&#x1b;�8(l�N(��Bqg{`�0&#x1c;&#xc;z}T�:nc]:����{pޕ���7��o��&#x1f;.����&apos;�&#x1d;�&#x17;&#x1f;5���&#x17;�&#x5eb;��f�&#x1e;���Ӷ�dY�&#x1f;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">self.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1707419675032</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">5476d0c4a7a347909c4b8a13078d4390-f8bdcecf-243f-40f8-b7c3-b9c44a57dead-7230</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-48" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;4&#xd;
2https://petstore.octoperf.com/actions/Order.action(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-49" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="order.cardType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.cardType</stringProp>
                  <stringProp name="Argument.value">American Express</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.creditCard" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.creditCard</stringProp>
                  <stringProp name="Argument.value">999 9999 9999 8885</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.expiryDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">order.expiryDate</stringProp>
                  <stringProp name="Argument.value">12/2029</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billToFirstName</stringProp>
                  <stringProp name="Argument.value">Bingi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billToLastName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billToLastName</stringProp>
                  <stringProp name="Argument.value">Prashanth</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billAddress1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billAddress1</stringProp>
                  <stringProp name="Argument.value">Seethampet</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billAddress2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billAddress2</stringProp>
                  <stringProp name="Argument.value">Hasanparthy</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billCity</stringProp>
                  <stringProp name="Argument.value">Warangal</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billState</stringProp>
                  <stringProp name="Argument.value">TS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billZip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billZip</stringProp>
                  <stringProp name="Argument.value">506371</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="order.billCountry" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">order.billCountry</stringProp>
                  <stringProp name="Argument.value">India</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="newOrder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrder</stringProp>
                  <stringProp name="Argument.value">${C_newOrder}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_sourcePage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_sourcePage</stringProp>
                  <stringProp name="Argument.value">${C_sourcePage_paymentpage}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__fp</stringProp>
                  <stringProp name="Argument.value">${C__fp_Paymentspage}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrderForm=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.regex">confirmed=(.*?)&quot; class=&quot;Button&quot;&gt;Confirm</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="RegexExtractor.refname">C_Confirm=true</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">C_Confirm=true_notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="509290945">Please confirm the information below and then press cont</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Confirm" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-51" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x18;&#x2;&quot;M&#xd;
Khttps://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIe2yQEIprbJAQipncoBCLD4ygEIkqHLAQiFoM0BCJDgzQEI8O3NAQih7s0BCMjuzQEIg/DNAQjV8c0BCKzyzQEIofPNAQiR9c0BCJ72zQEIsvfNAQi3+c0BCIL6zQEYwcvMARin6s0BGJz4zQEYyvjNAQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Order.action-50" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="newOrder" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">newOrder</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="confirmed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">confirmed</stringProp>
                  <stringProp name="Argument.value">${C_Confirm=true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1620325313">Thank you, your order has been submitted.</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.scope">all</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/OneCollector/1.0/-52" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�Z�o&#x1c;W&#x15;��&#x1d;�q���j&#x2436;ΒT&#xd;�L�{g,�]�&#x5c9;Q&#x1c;[��J�juw������̬?R&quot;�&#x5;!�@E$�&#xd;
&#x14;	&#x10;&#xf;�&#x3;H���&#x3;T�x!�&#x17;�&#x1;�&#x7;�*^�&#xf;��3_����VAE��`��;��{����I��,7�Λ&amp;�Iu���X��I��/WK�O&#x1d;{���9�&#x1f;A^��(�}��;�z�����Â3ib\�&#x8;6&#x14;�&apos;�̓� r��5&#x15;&#xb;*�L�O���m�&#x19;졇�/�v����&#x2;^�&#x16;&#xc;=�)*�Xٱ&#x5c9;�ӚE�x��ans&#x13;m?9؃��&#xe;��&gt;�Oj�FT�Ì^�dF�E��)���&#xc;M�8I�9�x8&#xc;�&#x19;Ά�N&#x13;o�w&#x1a;h��`�k�t,�&gt;��9�cy0�Y�ū�&quot;�.a�kU�X&#x4;{&#x4;t��)&#xc;/q&#xd;
�&#x1e;&#x1d;�yxd�f���R�Q�&#x8;�&#x4;�EA�Y��5��@�D�π�Go۫�&apos;.1�����l�h{l��ʅʝ%&amp;��)��37&#x1d;Fd�,ρ&#x1b;���&#x5;�\,J2��R���&#x19;�QՊ�p�&#x14;/͈|QT��&#x17;��E�b�8&apos;O�&#x1c;ھ&#xc;!z��~�������`&#xf;st��`��`�\l�˴o�qW�p ��=&#x1f;[��V�p�A&#x1f;&#x1a;&#x8;�7�*�G`�o:&gt;AC�h�¾鸫�p���X �C\&#xf;��v-&#x1f;&#x1d;-[��&gt;;kp#���zzG~t��?�G&#x7f;]�6���߾��&#x6;*��z&#x1;�d&#x18;�6|��ˢ�tur��q�b��&#x8;&#x1a;���؏&#x1c;�&#x13;u�q&#x1d;�&quot;.|���&#x13;c��됚^Ψ���,�&#x4;=�`�)�ێ�S=�� �Ă�&#xe;���1Y&#xf;��n�4�q,]���;��������&#x7f;���&apos;��&#x16;&#x1c;2�r��s�.�&#x4;ͮ&amp;^f�l0O��ZM&gt;�k֡�.�� ���;��&#x1d;l5�&#x1;�С�&#x1c;�&amp;&#xd;b&#x1b;����+&gt;^I!�&#x18;;�X�Q�:�W��&#x15;bW�f��[U&#x1f;�H�	� 1��p�&#x12;&apos;N�ʤ,�&#x1c;�}&#x15;���&#xd;�&#x6;Sc���$`��.&#xe;ϫW՝���&#x1e;&#xe;�L�&#x1b;�j&#x7;g�tI_kR�,&#x5;�.R&#xb;���Щ&#x14;2����l�C�%t�S��&#x7;7���^&#x10;�&#xb;]�aD&quot;ș�J�B0�.D�&#x8;�1&#x1a;m&#x1b;�\p�&#x5;�&#x1a;զ&#x7;�氉-�����SY�&#x6;&#x1d;��&#x1f;I劂Z����&#xb;E/�&#x1b;��Lb�&#x6;�&#x15;F�&amp;�٢&quot;B��9FŦ$�X1�&#x1a;�ζ�W��᎘M���n��&apos;��U&#xf;&#x2;�&#x1e;&#x5ce;�A���kR�V㉉ηq6�&#x1b;lѻĀ&#x1a;��UzI�U��8�Qt��H�\cj&lt;/0��EN�)���t&#x18;!�u&#x1a;lk+�t|��&#x1b;��ի�&#x3;*v5��&#x1c;ۢ6aug��&#xe;��\&#x5;����P��&#x11;�&#x17;=&lt;;�u���i%��W��&#x1b;F�&#x1e;&#x12;yt�[O,�&#x7;�*��x���f������U���$L&#xd;
\����x��&#x17;��6|&#x3;{-&#x7f;�e��}��+�!&#xe;�G=̺�`��H$n4pӀ&#xc;�	&#x1d;l���&#xc;qh(цgb8C&#xc;бD&#xd;[�sU�c&#x7;&#x1b;��!��&#x1e;&#xd;��&#x18;Ĉ&#xf;]*&#x1f;�����%�^�(&#x3;��A�r&#x6;��pX}��ᔻ[0�&#xb;��&#x11;�T5��kŢ�k�f��]EI&#x11;���J5,h��)���Y�$M�4���&#x1c;䡁ND&#x13;�&#x19;P]ś0�&#x1b;�]r&#x1a;T8!+��&#x3;��L&#x1c;L(t�����&#xf;_���z&#x1c;%⺎���َM��H�&#xe;�:ܯ�A �&#xb;��il&#x7;Ȱ&#x12;Aᢣ8�Y:��&#x0;&#x8;��&#x14;��&#xe;�&#xf;d��R��&#x8;.� ����B��&#x18;A�&#xd;F&quot;5���T&#x18;]�&#x5;��j&#x1a;&#x1c;�8��q���ϳ����Pۈ	&#x5;��(A&lt;c%H��@;Y.^Wx&#x14;�@��oa &quot;�CDRdQ�	#�P&#xd;$�7��H�.h&#x1c;.�&#x18;K��a�p��yo�I-�����&#x10;�D�0���&#x5;�c� �쌅�&#x1e;���&#x7f;���&#xf;�q&#x7f;&#x13;&#xd;D�Y�&gt;G&#xc;A�5,3�a&#x12;F&#x12;x�hX&#x17;&#x18;C�DY��#^c����&amp;�T1�f&#x3;6��l�ݙM���v&#x11;�6,r+��&#x6;�B�Ͽ�G�b��LVq�&#x7f;x�&#x1e;�&#x15;�&#x19;��&#xd;
�?���X&#x18;�N��$��\����p(��M�M�M&#x1f;&#x1a;�A�X�b��&#x1;�C&#xf;ε$�^�^&#x7;�i4r+fʥV�XhW�3Y�5�i6: �	����pX�P���&#x12;a@Z�&#x0;�N��&amp;:&#x1a;^��&#x5;�؊�U�p�������8N�i++�W�&#x6;${��,X&#xd;|���u_ s��k�LeY)}���H&#x6;H����&#xf;{�`&quot;�&#xd;�k&#x1f;���&amp;&#x16;s�f�%&#x10;&#xf;&#xc;5����S�*�Bj�#Z&lt;kD�h�&#x7f;=���/�ߟG&apos;[�f&#xd;b&#x1c;�&#xb;:���P�o&#x6;7ax�#���&#x5;Ԉ]p�*v�fã�o]��2&#x1d;�&#xc;��bM&#x16;��&#x1d;�&#x1a;&#x1a;��.60lQ?\&#xd;
��it:�,%%�&#x16;���#������:&#xe;o�*xhA��U�&apos;R�6�Gٟg�N��}���Yt5�ޓ�EfOf�&#x12;�&#x16;i�f�-j&#x16;�/t�S&#x4;-&#x8c;�b�,-�=Չ�&#x12;�\&#x7f;��,ן&#xc;&apos;�0���dxW&#x8;9�	��^&#x11;��ND&#x17;��]z&#xe;��p�:q)ڔ;[&#x17;s�PW�Q��)o�&#x14;��&#xd;v�3E��w��9R&#x4;=Ղ�iR�:�V��R�&#x1b;I�RY9����֓&#x1a;*Ō�i�I�&quot;�ŖvG�����V���m]�Zd�Ҥ&quot;�]���q��eyB6.11��&apos;Z��x&#x8;]	;Vb^�j���A����m��}���A��m�&#x19;k[u��O�&#x15;0U,&#xf;^ܟ����&#xe;/n5���:���~/zq����&#x1e;�4&amp;�^�q�&#x17;&#x8;V�F�^��� �.t\u%l��0R夽x�&#x13;&#x0;��Nf��,�&#x1e;��r��8�0�M�&#x7;^(L��&#x7;%�P�?&#x8;|�&#x11;�H��&#x7f;&#x4;.�&#x3;Z�^�í��&#x7;&#x1d;=&#xd;i����ԌO�M�7���&#x4;���O�\0H8&#x1d;1&#xb;�_{��&#x17;&amp;&#xb;��&#x15;L&#xd;
&#x13;&#x5;�&#x1a;�I&#x11;���&#x10;b&#x15;&amp;�{&#x13;&#x11;F�jn�Y&#xc;&#x1f;b�&#x4;#��&#x1e;�b�N��&#x15;�z&#x16;#e�򚦑���r&#x16;�Q�g�J��&#x1a;t�n�C�ndk&#x19;R&#x4;Ts�Tk&#x96;ݍ�&#x18;k+�{@j²�;�H&#x14;�ȇL&#x14;p���T�&#x3;&lt;��y�ۀO�I�+�n&apos;�}&#xc;��E=c �x&#x11;&#x18;,�àc��V��&#x1e;���Z�쪲��]ng15A��&#x18;%�Y[^��4���u��b�ё�]q`�e&#xd;�n&#x3;�m�Զ�a��&#xd;Č���6&#x3;&#x1c;{+�@�-&#xd;�Aw�4o��=�	^G,�����&#xc;Ĝhgϝ\�6�w�Ϣ�1��(ﺆ�&#x19;r&#xc;v�A�e��R�&#x18;&#x14;;�*�2���1½�&amp;&#x2;&#xc;\.���Y�&amp;&#xd;
:���&lt;��&#x1f;�]=�&#x16;��&#x4;�⽗�eZ�&#x5c8;&#xd;�H�&#x7bd;���;&#x1;���?��w4�瀈�:�D�&#x7f;�rj��鋿&#x19;��τ�&#x16;���_=��ڍ��ҍxZ?l�&#x5;�n_�������i��&#x5;���.�����&#x3;&lt;���&#x1f;&#xe;&#x1a;�&#x7;&#xd;�O����iS�܊l�&#x10;���l�z�wW�%����.����&#x18;�ϥ�&#x1a;�y7�N�g/��&#x1b;�����&#x1e;2}&#x5;E�і���vh[��&gt;[����m�LTo5-R	�ӥz&#x1d;f	����Go��w[�ZMSu���dH�j(�&apos;*�x�4y�F4�Y�g�V�J3����h&quot;7�He^f�f�%FT�)�X�*Emj��&gt;����f�A��3٬&#xd;kP9�l��$&lt;&#x14;&#x6;�&#xd;d���&#x7;Gb�&#x1e;���&#x15;Ҷo��lL�[�6u�M^Į&#xd;\%&#x1e;k�qP�W&gt;&#x11;�V;(t\��&#x1c;�ͫǉI��W&#xe;�q��؈���C�����H&#x1f;&#x10;��%�nW&#x1;�[Y�K1�V)�&#x14;�;&#x15;Q1�T�ݪ�0gLSE!�n!�&#x7;&#x4;�D�4.!&#x3;��B�&#x7;�&#x19;;ץh����YgI�8�&#x17;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mobile.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1707419736273</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">f998cc5ba4d448d6a1e8e913ff18be94-dd122e0a-fcf8-4dc5-9dbb-6afac5325183-7405,faab4ead691e451eb230afc98a28e0f2-4089b390-5e4a-4a54-ac5c-6be4f2ea9321-7247</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="AuthMsaDeviceTicket" elementType="Header">
                  <stringProp name="Header.name">AuthMsaDeviceTicket</stringProp>
                  <stringProp name="Header.value">t=GwAWAbuEBAAU2qcZHJoKGNizGOeyqM4OaIoSZ0MOZgAAEIOw53UYUr8Fd8EJCdP5OiHgAP70mOgd8b2mDKhIcxb/Dr2fZTGWv0R+Y0wvJSBUJkyyuWFXk45nne1oKNh/BMWAh+4cb7D5T8C7Wprg57hWMvlHvxicDR9LsQ2Q0TbFMcoceHv6UzZRuznIiinkczi7imjydLMVf1uZa8608jP86Sw2rs9+GEfdngVnPbMJP7DzRo8+dYGETp9d7h4/AHm1dbuY1y1Q1o9lIR1qB8oYMbbR9MHPrcXnndIJCLniM0cahPzOyrQTGwAgMAizKZeOAttE3tukpuzeJVN+Z39tDqeeyor2V3PiDwiDBggF0+YeHwE=&amp;p=</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.7.101.1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Logout" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/log?format=json&amp;hasfast=true&amp;authuser=0-53" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://pagespeed.web.dev/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://pagespeed.web.dev</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">x-goog-authuser</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/safebrowsing/clientreport/realtime-54" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
=https://petstore.octoperf.com/actions/Account.action?signoff=&#x10;&#x1;&#x1a;a&#x8;&#x3;&#x10;&#x1;(&#x2;0&#x0;8&#x0;@&#x1;J&#x1d;Chrome/121.0.6167.160/WindowsP&#x5;X&#x1;`&#x1;r+&#x8;&#x1;&#x10;�֙��1&#x1a; ��&lt;���A�&#x0;VR.���x�/�&#x16;S�&#x1f;�&gt;�ߏ4Ȇ�&#x1;&#x1;0&#x3;8&#x7;B�&#x1;&#xd;
=https://petstore.octoperf.com/actions/Account.action?signoff=&#x10;&#x1;&#x1a;&#x3;::1&quot;Khttps://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true0&#x1;9&#x0;0�f��xBP&#x3;X&#x0;p&#x0;B�&#x1;&#xd;
Khttps://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true&#x10;&#x2;&#x1a;&#x3;::1&quot;2https://petstore.octoperf.com/actions/Order.action0&#x0;9&#x0;0�Z��xBP&#x3;X&#x0;p&#x0;BL&#xd;
2https://petstore.octoperf.com/actions/Order.action&#x10;&#x3;&#x1a;&#x3;::10&#x0;9&#x0;@�P��xBP&#x3;X&#x0;p&#x0;H&#x1;P&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">safebrowsing.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/safebrowsing/clientreport/realtime</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AfB_byAiw2O8ChzUL5RtbFYU8XhGgdnY1yY1NeUp7mqyztuCqlrccKwWsvYl3qKLHbcByA8x-y5eBVNcfdeAsfq-uWTkWjI3TXHjd-mcX7OBF_5HQuAJF6A80xWPHvHxguHm-zDK-29QtMag04syH0elnf89tRDWXm8d2P_35g1tFGE59_Yn9k6MHmS5VZ-NIBUzph70XuJXdav_t4TPYW07j-y8C0SbfsRKeifzAjdeNygSxcHQVFyhUNESsFeSpsTIAGFwyjkaCgYKARYSARMSFQHGX2MiI__EeoxUsQWhHd2Lvx8Yog0274</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Account.action-55" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="signoff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signoff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/safebrowsing/clientreport/realtime-57" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
4https://petstore.octoperf.com/actions/Catalog.action&#x10;&#x1;&#x1a;a&#x8;&#x3;&#x10;&#x1;(&#x2;0&#x0;8&#x0;@&#x1;J&#x1d;Chrome/121.0.6167.160/WindowsP&#x5;X&#x1;`&#x1;r+&#x8;&#x1;&#x10;�ڙ��1&#x1a; �~Ĉ?Y�#�e\������T&apos;�}�ѯ��^ձ̐&#x1;&#x1;0&#x3;8&#x7;B�&#x2;&#xd;
4https://petstore.octoperf.com/actions/Catalog.action&#x10;&#x1;&#x1a;&#x3;::1&quot;Khttps://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true0&#x1;9&#x0;0�f��xBB?&#xd;
=https://petstore.octoperf.com/actions/Account.action?signoff=B6&#xd;
4https://petstore.octoperf.com/actions/Catalog.actionP&#x3;X&#x0;p&#x0;B�&#x1;&#xd;
Khttps://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true&#x10;&#x2;&#x1a;&#x3;::1&quot;2https://petstore.octoperf.com/actions/Order.action0&#x0;9&#x0;0�Z��xBP&#x3;X&#x0;p&#x0;BL&#xd;
2https://petstore.octoperf.com/actions/Order.action&#x10;&#x3;&#x1a;&#x3;::10&#x0;9&#x0;@�P��xBP&#x3;X&#x0;p&#x0;H&#x1;P&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">safebrowsing.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/safebrowsing/clientreport/realtime</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AfB_byAiw2O8ChzUL5RtbFYU8XhGgdnY1yY1NeUp7mqyztuCqlrccKwWsvYl3qKLHbcByA8x-y5eBVNcfdeAsfq-uWTkWjI3TXHjd-mcX7OBF_5HQuAJF6A80xWPHvHxguHm-zDK-29QtMag04syH0elnf89tRDWXm8d2P_35g1tFGE59_Yn9k6MHmS5VZ-NIBUzph70XuJXdav_t4TPYW07j-y8C0SbfsRKeifzAjdeNygSxcHQVFyhUNESsFeSpsTIAGFwyjkaCgYKARYSARMSFQHGX2MiI__EeoxUsQWhHd2Lvx8Yog0274</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/actions/Catalog.action-56" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">petstore.octoperf.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://petstore.octoperf.com/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1241806025">Freshwater</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">9090</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">G:\JMeter_BrushUp\JPET_STORE\JSON_FILE1.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
